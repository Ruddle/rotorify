{"version":3,"sources":["logo.svg","frag/utils.js","frag/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["useAnimationFrame","callback","requestRef","React","useRef","previousTimeRef","animate","time","undefined","current","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","Ammo","window","THREE","require","cloneDeep","tmpTrans","init","canvas","camera","scene","renderer","Scene","WebGLRenderer","antialias","setSize","innerWidth","innerHeight","background","Color","PerspectiveCamera","position","set","lookAt","Vector3","hemiLight","HemisphereLight","color","setHSL","groundColor","add","dirLight","DirectionalLight","multiplyScalar","castShadow","shadow","mapSize","width","height","left","right","top","bottom","far","setClearColor","setPixelRatio","devicePixelRatio","gammaInput","gammaOutput","shadowMap","enabled","createBlock","physicsWorld","pos","scale","quat","blockPlane","Mesh","BoxBufferGeometry","MeshPhongMaterial","receiveShadow","transform","btTransform","setIdentity","setOrigin","btVector3","setRotation","btQuaternion","motionState","btDefaultMotionState","colShape","btBoxShape","setMargin","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","body","btRigidBody","addRigidBody","reset","state","rigidBodies","i","length","objThree","objAmmo","userData","physicsBody","removeRigidBody","destroy","getCollisionShape","getMotionState","e","console","error","remove","resetRigidBodies","droneData","mass","totalMass","ball","Group","type","radius","mcd_meters","motorCenterDistance","ball1","SphereBufferGeometry","ball2","ball3","ball4","btSphereShape","setActivationState","push","createDrone","sim","INITIAL_SIM_DATA","setupPhysicsWorld","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","battery","batteryChart","yChart","vyChart","throttle","ms","EditorFrag","stateRef","canvasRef","useState","motorKV","motorMass","motorLiftPerWatt","escMass","batteryMass","batteryS","batteryP","batteryC","batteryCapacity","frameMass","v","mA","w","j","setDroneData_","simData","setSimData","droneComputed","setDroneComputed","setDroneData","arg","alive","newDrone","drone","computeMaxElec","test","a","log","setTimeout","dt","step","stepSimulation","batteryDrain","Math","max","wattCons","lift","droneAmmo","liftVec","applyImpulse","getWorldTransform","y","getOrigin","vy","getLinearVelocity","p","q","getRotation","x","z","quaternion","updatePhysics","render","style","display","flexDirection","overflow","toFixed","Chart","name","arrf","min","value","parseFloat","target","ref","flex","overflowY","NumberIn","unit","setValue","old","TextOut","justifyContent","padding","textAlign","alignItems","onChange","fl","marginLeft","disabled","lastComputeIndex","h","arr","ctx","getContext","fillStyle","fillRect","split","toY","toX","beginPath","moveTo","forEach","lineTo","strokeStyle","stroke","border","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac2386a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nexport let clamp = (x, a, b) => Math.max(a, Math.min(b, x));\nexport let flatstep = (a, b, x) => clamp((x - a) / (b - a), 0, 1);\nexport let ease = (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport let smoothstep = (a, b, x) => ease(flatstep(a, b, x));\nexport let mix = (a, b, m) => a * (1.0 - m) + b * m;\nexport const useAnimationFrame = (callback) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const requestRef = React.useRef();\n  const previousTimeRef = React.useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current != undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  React.useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []); // Make sure the effect runs only once\n};\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useAnimationFrame } from \"./utils\";\n\nlet Ammo = window.Ammo;\n\nconst THREE = require(\"three\");\nconst qs = require(\"query-string\");\nvar cloneDeep = require(\"lodash.clonedeep\");\n\nvar _ = require(\"lodash\");\n\nlet tmpTrans = null;\n\n// const DISTANCE_UNIT = [\"mm\", \"m\", \"cm\", \"inch\", \"foot\"];\n\n// function distanceToMeter(v, u) {\n//   if (u == \"mm\") return v / 1000;\n//   if (u == \"m\") return v;\n//   if (u == \"cm\") return v / 100;\n//   if (u == \"inch\") return 2.54 / 100;\n//   if (u == \"foot\") return v * 0.3048;\n//   return v;\n// }\n\nfunction init(canvas) {\n  let camera, scene, renderer;\n\n  scene = new THREE.Scene();\n\n  renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\n  renderer.setSize(window.innerWidth - 300, window.innerHeight);\n\n  ///\n  //create the scene\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xbfd1e5);\n\n  //create camera\n  camera = new THREE.PerspectiveCamera(\n    70,\n    (window.innerWidth - 300) / window.innerHeight,\n    0.2,\n    5000\n  );\n  camera.position.set(0, 1.7, 4);\n  camera.lookAt(new THREE.Vector3(0, 1.7, 0));\n\n  //Add hemisphere light\n  let hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.1);\n  hemiLight.color.setHSL(0.6, 0.6, 0.6);\n  hemiLight.groundColor.setHSL(0.1, 1, 0.4);\n  hemiLight.position.set(0, 50, 0);\n  scene.add(hemiLight);\n\n  //Add directional light\n  let dirLight = new THREE.DirectionalLight(0xffffff, 1);\n  dirLight.color.setHSL(0.1, 1, 0.95);\n  dirLight.position.set(-1, 1.75, 1);\n  dirLight.position.multiplyScalar(100);\n  scene.add(dirLight);\n\n  dirLight.castShadow = true;\n\n  dirLight.shadow.mapSize.width = 2048;\n  dirLight.shadow.mapSize.height = 2048;\n\n  let d = 50;\n\n  dirLight.shadow.camera.left = -d;\n  dirLight.shadow.camera.right = d;\n  dirLight.shadow.camera.top = d;\n  dirLight.shadow.camera.bottom = -d;\n\n  dirLight.shadow.camera.far = 13500;\n\n  renderer.setClearColor(0xbfd1e5);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth - 300, window.innerHeight);\n\n  renderer.gammaInput = true;\n  renderer.gammaOutput = true;\n\n  renderer.shadowMap.enabled = true;\n\n  return { camera, scene, renderer };\n}\n\nfunction createBlock({ physicsWorld, scene }) {\n  let pos = { x: 0, y: -1, z: 0 };\n  let scale = { x: 20, y: 2, z: 20 };\n  let quat = { x: 0, y: 0, z: 0, w: 1 };\n  let mass = 0;\n\n  //threeJS Section\n  let blockPlane = new THREE.Mesh(\n    new THREE.BoxBufferGeometry(),\n    new THREE.MeshPhongMaterial({ color: 0xa0afa4 })\n  );\n\n  blockPlane.position.set(pos.x, pos.y, pos.z);\n  blockPlane.scale.set(scale.x, scale.y, scale.z);\n\n  blockPlane.castShadow = true;\n  blockPlane.receiveShadow = true;\n\n  scene.add(blockPlane);\n\n  //Ammojs Section\n  let transform = new Ammo.btTransform();\n  transform.setIdentity();\n  transform.setOrigin(new Ammo.btVector3(pos.x, pos.y, pos.z));\n  transform.setRotation(new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));\n  let motionState = new Ammo.btDefaultMotionState(transform);\n\n  let colShape = new Ammo.btBoxShape(\n    new Ammo.btVector3(scale.x * 0.5, scale.y * 0.5, scale.z * 0.5)\n  );\n  colShape.setMargin(0.05);\n\n  let localInertia = new Ammo.btVector3(0, 0, 0);\n  colShape.calculateLocalInertia(mass, localInertia);\n\n  let rbInfo = new Ammo.btRigidBodyConstructionInfo(\n    mass,\n    motionState,\n    colShape,\n    localInertia\n  );\n  let body = new Ammo.btRigidBody(rbInfo);\n\n  physicsWorld.addRigidBody(body);\n}\n\nfunction resetRigidBodies({ physicsWorld, scene, rigidBodies }) {\n  for (let i = 0; i < rigidBodies.length; i++) {\n    let objThree = rigidBodies[i];\n    let objAmmo = objThree.userData.physicsBody;\n\n    physicsWorld.removeRigidBody(objAmmo);\n    try {\n      Ammo.destroy(objAmmo.getCollisionShape());\n      Ammo.destroy(objAmmo.getMotionState());\n      Ammo.destroy(objAmmo);\n    } catch (e) {\n      console.error(e);\n    }\n\n    scene.remove(objThree);\n  }\n  rigidBodies.length = 0;\n}\n\nfunction createDrone({ physicsWorld, scene, rigidBodies, droneData }) {\n  let pos = { x: 0, y: 5, z: 0 };\n\n  let quat = { x: 0, y: 0, z: 0, w: 1 };\n  let mass = droneData.totalMass / 1000;\n\n  let ball = new THREE.Group();\n  if (droneData.type === \"quadrotor +\") {\n    let radius = 2 / 100;\n    let mcd_meters = droneData.motorCenterDistance / 1000;\n    let ball1 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball1.position.set(mcd_meters, 0, 0);\n\n    let ball2 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball2.position.set(-mcd_meters, 0, 0);\n\n    let ball3 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball3.position.set(0, 0, -mcd_meters);\n\n    let ball4 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball4.position.set(0, 0, mcd_meters);\n\n    ball.add(ball1);\n    ball.add(ball2);\n    ball.add(ball3);\n    ball.add(ball4);\n  }\n\n  ball.position.set(pos.x, pos.y, pos.z);\n\n  ball.castShadow = true;\n  ball.receiveShadow = true;\n\n  scene.add(ball);\n\n  //Ammojs Section\n  let transform = new Ammo.btTransform();\n  transform.setIdentity();\n  transform.setOrigin(new Ammo.btVector3(pos.x, pos.y, pos.z));\n  transform.setRotation(new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));\n  let motionState = new Ammo.btDefaultMotionState(transform);\n\n  let colShape = new Ammo.btSphereShape(droneData.motorCenterDistance / 1000);\n  colShape.setMargin(0.05);\n\n  let localInertia = new Ammo.btVector3(0, 0, 0);\n  colShape.calculateLocalInertia(mass, localInertia);\n\n  let rbInfo = new Ammo.btRigidBodyConstructionInfo(\n    mass,\n    motionState,\n    colShape,\n    localInertia\n  );\n  let body = new Ammo.btRigidBody(rbInfo);\n\n  body.setActivationState(4);\n\n  ball.userData.physicsBody = body;\n  physicsWorld.addRigidBody(body);\n\n  rigidBodies.push(ball);\n}\n\nfunction reset(state) {\n  resetRigidBodies(state);\n  createDrone(state);\n  state.sim = INITIAL_SIM_DATA();\n}\n\nfunction setupPhysicsWorld() {\n  let collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\n    dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n    overlappingPairCache = new Ammo.btDbvtBroadphase(),\n    solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n  let physicsWorld = new Ammo.btDiscreteDynamicsWorld(\n    dispatcher,\n    overlappingPairCache,\n    solver,\n    collisionConfiguration\n  );\n  physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\n\n  tmpTrans = new Ammo.btTransform();\n  return physicsWorld;\n}\n\nfunction updatePhysics(\n  { physicsWorld, rigidBodies, sim, droneData },\n  deltaTime\n) {\n  // Step world\n\n  if (droneData)\n    for (let step = 0; step < deltaTime; step++) {\n      physicsWorld.stepSimulation(1 / 1000.0, 0);\n\n      let batteryDrain =\n        (sim.throttle * (100 * (droneData.batteryC * (1 / 1000)))) / 3600;\n      sim.battery = Math.max(0, sim.battery - batteryDrain);\n\n      let jouleCons = (batteryDrain / 100) * droneData.j;\n      let wattCons = jouleCons / 0.001;\n      let lift = droneData.motorLiftPerWatt * wattCons;\n      let drone = rigidBodies[0];\n      let droneAmmo = drone.userData.physicsBody;\n      let liftVec = new Ammo.btVector3(0, lift / 1000, 0);\n\n      droneAmmo.applyImpulse(liftVec, new Ammo.btVector3(0, 0, 0));\n      sim.ms += 1;\n\n      if (sim.ms % 30 === 0) {\n        sim.batteryChart.push(sim.battery);\n        droneAmmo.getMotionState().getWorldTransform(tmpTrans);\n        let y = tmpTrans.getOrigin().y();\n        sim.yChart.push(y);\n        let vy = droneAmmo.getLinearVelocity().y();\n\n        sim.vyChart.push(vy);\n      }\n    }\n  // physicsWorld.stepSimulation(deltaTime / 1000.0, 10000, 1 / 1000);\n\n  // Update rigid bodies\n  for (let i = 0; i < rigidBodies.length; i++) {\n    let objThree = rigidBodies[i];\n    let objAmmo = objThree.userData.physicsBody;\n    let ms = objAmmo.getMotionState();\n    if (ms) {\n      ms.getWorldTransform(tmpTrans);\n      let p = tmpTrans.getOrigin();\n      let q = tmpTrans.getRotation();\n      objThree.position.set(p.x(), p.y(), p.z());\n      objThree.quaternion.set(q.x(), q.y(), q.z(), q.w());\n    }\n  }\n}\n\nconst INITIAL_DRONE_DATA = () => {\n  return {\n    type: \"quadrotor +\",\n    motorCenterDistance: 100, //mm\n    motorKV: 10000, // RPM/V\n    motorMass: 20, //g\n    motorLiftPerWatt: 0.05, //N/W\n    escMass: 20, //g\n    batteryMass: 100, //g\n    batteryS: 2,\n    batteryP: 1,\n    batteryC: 45, // h-1\n    batteryCapacity: 850, // mAh\n    frameMass: 100, //g\n    totalMass: 0,\n    v: 0,\n    mA: 0,\n    w: 0,\n    j: 0,\n  };\n};\nconst INITIAL_SIM_DATA = () => {\n  return {\n    battery: 100,\n    batteryChart: [],\n    yChart: [],\n    vyChart: [],\n    throttle: 0,\n    ms: 0,\n  };\n};\nfunction computeTotalMass(drone) {\n  return {\n    totalMass:\n      drone.escMass * 4 +\n      drone.motorMass * 4 +\n      drone.batteryMass +\n      drone.frameMass,\n  };\n}\n\nfunction computeMaxElec(drone) {\n  let v = drone.batteryS * 3.7;\n  let mA = drone.batteryC * drone.batteryCapacity; //mA\n  let w = (v * mA) / 1000;\n  let j = ((drone.batteryCapacity * 3600) / 1000) * v;\n  return { v, mA, w, j };\n}\n\nexport default function EditorFrag() {\n  let stateRef = useRef(null);\n  let canvasRef = useRef();\n  let [droneData, setDroneData_] = useState(INITIAL_DRONE_DATA());\n  let [simData, setSimData] = useState(INITIAL_SIM_DATA());\n  let [droneComputed, setDroneComputed] = useState(false);\n  function setDroneData(arg) {\n    setDroneData_(arg);\n    setDroneComputed(false);\n  }\n\n  useEffect(() => {\n    if (droneComputed) {\n      if (stateRef.current?.alive) {\n        stateRef.current.droneData = droneData;\n        reset(stateRef.current);\n      }\n    } else {\n      let newDrone = {\n        ...cloneDeep(droneData),\n        ...computeMaxElec(droneData),\n        ...computeTotalMass(droneData),\n      };\n      if (stateRef.current?.alive) stateRef.current.droneData = newDrone;\n      setDroneData_(newDrone);\n      setDroneComputed(true);\n    }\n  }, [droneData, droneComputed]);\n  useEffect(() => {\n    async function test() {\n      console.log(\"Trying to load Ammo.js\");\n      try {\n        Ammo = await Ammo();\n\n        stateRef.current = init(canvasRef.current);\n        stateRef.current.physicsWorld = setupPhysicsWorld();\n\n        stateRef.current.rigidBodies = [];\n        createBlock(stateRef.current);\n        stateRef.current.alive = true;\n        setDroneComputed(false);\n        stateRef.current.sim = INITIAL_SIM_DATA();\n      } catch (e) {\n        console.error(\"ammo: \", e);\n        setTimeout(() => test(), 500);\n      }\n    }\n    if (Ammo?.btDefaultCollisionConfiguration == undefined) test();\n  }, []);\n\n  useAnimationFrame((dt) => {\n    if (stateRef.current != null) {\n      let {\n        camera,\n        scene,\n        renderer,\n\n        sim,\n        droneData,\n        rigidBodies,\n        physicsWorld,\n      } = stateRef.current;\n\n      updatePhysics({ physicsWorld, rigidBodies, sim, droneData }, dt);\n      setSimData(cloneDeep(sim));\n      renderer.render(scene, camera);\n    }\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n\n        background: \"rgb(62, 62, 62)\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div style={{ position: \"relative\", overflow: \"hidden\" }}>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div> {simData.ms + \"ms\"}</div>\n          <div> {simData.battery.toFixed(2) + \"%\"}</div>\n          <Chart\n            name={\"battery\"}\n            arrf={() => stateRef.current?.sim?.batteryChart}\n          ></Chart>\n          <Chart name={\"y\"} arrf={() => stateRef.current?.sim?.yChart}></Chart>\n          <Chart\n            name={\"vy\"}\n            arrf={() => stateRef.current?.sim?.vyChart}\n          ></Chart>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n            left: \"50%\",\n            transform: \"translate(-50%,0%)\",\n          }}\n        >\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            value=\"0\"\n            step=\"0.01\"\n            value={simData.throttle}\n            onChange={(e) =>\n              (stateRef.current.sim.throttle = parseFloat(e.target.value))\n            }\n          ></input>\n        </div>\n        <canvas ref={canvasRef} style={{ flex: \"1 1 auto\" }}></canvas>\n      </div>\n\n      <div style={{ width: \"300px\", overflowY: \"auto\", height: \"100%\" }}>\n        <NumberIn\n          name={\"motor center distance\"}\n          unit={\"mm\"}\n          value={droneData.motorCenterDistance}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorCenterDistance: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"motor kv\"}\n          unit={\"RPM/V\"}\n          value={droneData.motorKV}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorKV: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"single motor mass\"}\n          unit={\"g\"}\n          value={droneData.motorMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"motor lift\"}\n          unit={\"N/W\"}\n          value={droneData.motorLiftPerWatt}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorLiftPerWatt: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"single esc mass\"}\n          unit={\"g\"}\n          value={droneData.escMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, escMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery mass\"}\n          unit={\"g\"}\n          value={droneData.batteryMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery capacity\"}\n          unit={\"mAh\"}\n          value={droneData.batteryCapacity}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryCapacity: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery S\"}\n          unit={\"\"}\n          value={droneData.batteryS}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryS: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"battery P\"}\n          unit={\"\"}\n          value={droneData.batteryP}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryP: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery C\"}\n          unit={\"h-1\"}\n          value={droneData.batteryC}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryC: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"frame mass\"}\n          unit={\"g\"}\n          value={droneData.frameMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, frameMass: v };\n            })\n          }\n        ></NumberIn>\n        <TextOut\n          name={\"total mass\"}\n          unit={\"g\"}\n          value={droneData.totalMass}\n        ></TextOut>\n        <TextOut name={\"total V\"} unit={\"V\"} value={droneData.v}></TextOut>\n        <TextOut\n          name={\"max current\"}\n          unit={\"mA\"}\n          value={droneData.mA}\n        ></TextOut>\n        <TextOut name={\"max power\"} unit={\"W\"} value={droneData.w}></TextOut>\n      </div>\n    </div>\n  );\n}\n\nfunction NumberIn({ name, unit, value, setValue }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ textAlign: \"left\" }}>{name}</div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          width: \"120px\",\n          flex: \"none\",\n        }}\n      >\n        <input\n          style={{ width: \"60px\" }}\n          value={value}\n          type=\"number\"\n          onChange={(e) => {\n            let fl = parseFloat(e.target.value);\n            setValue(fl);\n          }}\n        ></input>{\" \"}\n        <span style={{ marginLeft: \"5px\" }}>{unit}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction TextOut({ name, unit, value }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ textAlign: \"left\" }}>{name}</div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          width: \"120px\",\n          flex: \"none\",\n        }}\n      >\n        <input disabled style={{ width: \"60px\" }} value={value}></input>{\" \"}\n        <span style={{ marginLeft: \"5px\" }}>{unit}</span>\n      </div>\n    </div>\n  );\n}\n\nconst INIT_CHART = () => {\n  return {\n    min: 9999,\n    max: -9999,\n    lastComputeIndex: -1,\n  };\n};\nfunction Chart({ arrf, name }) {\n  let ref = useRef();\n\n  let stateRef = useRef(INIT_CHART());\n  let w = 200;\n  let h = 200;\n  useAnimationFrame((dt) => {\n    //\n    let arr = arrf();\n    if (!ref.current || !arr || !stateRef.current) return;\n\n    if (stateRef.current.lastComputeIndex > arr.length - 1)\n      stateRef.current = INIT_CHART();\n\n    let state = stateRef.current;\n    ref.current.width = w;\n    ref.current.height = h;\n    let ctx = ref.current.getContext(\"2d\");\n    ctx.width = w;\n    ctx.height = h;\n    ctx.fillStyle = \"rgba(0,0,0,0.6)\";\n    ctx.fillRect(0, 0, w, h);\n\n    for (let i = state.lastComputeIndex + 1; i < arr.length; i++) {\n      state.min = Math.min(state.min, arr[i]);\n      state.max = Math.max(state.max, arr[i]);\n    }\n    state.lastComputeIndex = arr.length - 1;\n    let split = state.max - state.min;\n    let max = state.max + split / 10;\n    let min = state.min - split / 10;\n\n    let toY = (v) => h - (h * (v - min)) / (max - min);\n    let toX = (v) => (v * w) / (arr.length - 1);\n    ctx.beginPath();\n    ctx.moveTo(toX(0), toY(arr[0] || 0));\n    arr.forEach((v, i) => {\n      ctx.lineTo(toX(i), toY(v));\n    });\n    ctx.strokeStyle = \"#fff\";\n    ctx.stroke();\n  });\n\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        background: \"rgba(0,0,0,0.8)\",\n        color: \"white\",\n      }}\n    >\n      <div>{name}</div>\n      <canvas ref={ref} style={{ width: w + \"px\", height: h + \"px\" }}></canvas>\n    </div>\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EditorFrag from \"./frag/Editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EditorFrag></EditorFrag>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}