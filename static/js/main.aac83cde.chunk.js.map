{"version":3,"sources":["logo.svg","frag/utils.js","frag/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["clamp","x","a","b","Math","max","min","flatstep","useAnimationFrame","callback","requestRef","React","useRef","previousTimeRef","animate","time","undefined","current","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","Ammo","window","THREE","require","cloneDeep","tmpTrans","TRAINING_EPSILON","STAGE_TRAINING_ALT","INITIAL_SIM_DATA","battery","batteryChart","yChart","vyChart","throttle","ms","stage","pids","alt","p","i","d","accI","simTime","deltaToSim","training","maxspeed","currentErrAcc","errs","currentDir","target","t","sin","PI","pow","init","canvas","camera","scene","renderer","Scene","WebGLRenderer","antialias","setSize","innerWidth","innerHeight","background","Color","PerspectiveCamera","position","set","lookAt","Vector3","hemiLight","HemisphereLight","color","setHSL","groundColor","add","dirLight","DirectionalLight","multiplyScalar","castShadow","shadow","mapSize","width","height","left","right","top","bottom","far","setClearColor","setPixelRatio","devicePixelRatio","gammaInput","gammaOutput","shadowMap","enabled","pos","y","z","scale","Mesh","BoxBufferGeometry","MeshPhongMaterial","receiveShadow","createTarget","createBlock","physicsWorld","quat","blockPlane","transform","btTransform","setIdentity","setOrigin","btVector3","setRotation","btQuaternion","motionState","btDefaultMotionState","colShape","btBoxShape","setMargin","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","body","btRigidBody","addRigidBody","reset","state","rigidBodies","length","objThree","objAmmo","userData","physicsBody","removeRigidBody","destroy","getCollisionShape","getMotionState","e","console","error","remove","resetRigidBodies","droneData","mass","totalMass","ball","Group","type","radius","mcd_meters","motorCenterDistance","ball1","SphereBufferGeometry","ball2","ball3","ball4","rod1","rod2","tempVec","tempQuat","setActivationState","push","createDrone","sim","setupPhysicsWorld","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","EditorFrag","stateRef","canvasRef","useState","motorKV","motorMass","motorLiftPerWatt","escMass","batteryMass","batteryS","batteryP","batteryC","batteryCapacity","frameMass","v","mA","w","j","setDroneData_","simData","setSimData","droneComputed","setDroneComputed","setDroneData","arg","alive","newDrone","drone","computeMaxElec","test","log","setTimeout","dt","startTime","performance","now","simulateOneStep","stepSimulation","droneAmmo","getWorldTransform","getOrigin","vy","getLinearVelocity","q","setWorldTransform","ty","altErr","abs","pContrib","dContrib","iContrib","batteryDrain","oldBattery","wattCons","lift","liftVec","relPos","applyImpulse","includes","oldSim","l","stepDone","msPerStep","step","getRotation","quaternion","updatePhysics","c1","render","style","display","flexDirection","overflow","toFixed","Chart","name","arrf","pid","dpid","value","borderRadius","padding","cursor","onClick","parseFloat","ref","flex","overflowY","NumberIn","unit","setValue","old","TextOut","justifyContent","textAlign","alignItems","onChange","fl","marginLeft","disabled","lastComputeIndex","setCurrent","h","arr","ctx","getContext","fillStyle","fillRect","split","toY","toX","beginPath","moveTo","forEach","lineTo","strokeStyle","stroke","border","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aac83cde.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nexport let clamp = (x, a, b) => Math.max(a, Math.min(b, x));\nexport let flatstep = (a, b, x) => clamp((x - a) / (b - a), 0, 1);\nexport let ease = (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport let smoothstep = (a, b, x) => ease(flatstep(a, b, x));\nexport let mix = (a, b, m) => a * (1.0 - m) + b * m;\nexport const useAnimationFrame = (callback) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const requestRef = React.useRef();\n  const previousTimeRef = React.useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current != undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  React.useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []); // Make sure the effect runs only once\n};\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { clamp, flatstep, smoothstep, useAnimationFrame } from \"./utils\";\n\nlet Ammo = window.Ammo;\n\nconst THREE = require(\"three\");\nconst qs = require(\"query-string\");\nvar cloneDeep = require(\"lodash.clonedeep\");\n\nvar _ = require(\"lodash\");\n\nlet tmpTrans = null;\n\n// const DISTANCE_UNIT = [\"mm\", \"m\", \"cm\", \"inch\", \"foot\"];\n\n// function distanceToMeter(v, u) {\n//   if (u == \"mm\") return v / 1000;\n//   if (u == \"m\") return v;\n//   if (u == \"cm\") return v / 100;\n//   if (u == \"inch\") return 2.54 / 100;\n//   if (u == \"foot\") return v * 0.3048;\n//   return v;\n// }\n\nconst TRAINING_TIME_MS = 20000;\n\nconst TRAINING_EPSILON = 0.001;\n\nconst STAGE_FREE = \"free\";\nconst STAGE_FREE_ASSER_0 = \"free.asser0\";\nconst STAGE_TRAINING_ALT = \"training.alt\";\nconst STAGE_TRAINING_VROT = \"training.vrot\";\n\nconst INITIAL_DRONE_DATA = () => {\n  return {\n    type: \"quadrotor +\",\n    motorCenterDistance: 100, //mm\n    motorKV: 10000, // RPM/V\n    motorMass: 20, //g\n    motorLiftPerWatt: 0.05, //N/W\n    escMass: 20, //g\n    batteryMass: 100, //g\n    batteryS: 2,\n    batteryP: 1,\n    batteryC: 45, // h-1\n    batteryCapacity: 850, // mAh\n    frameMass: 100, //g\n    totalMass: 0,\n    v: 0,\n    mA: 0,\n    w: 0,\n    j: 0,\n  };\n};\nconst INITIAL_SIM_DATA = () => {\n  return {\n    battery: 100,\n    batteryChart: [],\n    yChart: [],\n    vyChart: [],\n    throttle: 0,\n    ms: 0,\n    stage: STAGE_TRAINING_ALT,\n    pids: {\n      alt: {\n        p: 1,\n        i: 0,\n        d: 0,\n\n        accI: [],\n      },\n    },\n    simTime: 0,\n    deltaToSim: 0,\n    training: {\n      maxspeed: true,\n      alt: {\n        currentErrAcc: 0,\n        errs: [],\n        p: 0.1,\n        i: 1 / 1000,\n        d: 1 / 100,\n        currentDir: \"p\",\n        target: (t) =>\n          2 +\n          1.5 *\n            flatstep(\n              -0.1,\n              0.1,\n              Math.sin(Math.PI * 2 * 2 * Math.pow(t / 15000, 2))\n            ),\n      },\n    },\n  };\n};\n\nfunction init(canvas) {\n  let camera, scene, renderer;\n\n  scene = new THREE.Scene();\n\n  renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\n  renderer.setSize(window.innerWidth - 300, window.innerHeight);\n\n  ///\n  //create the scene\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xbfd1e5);\n\n  //create camera\n  camera = new THREE.PerspectiveCamera(\n    70,\n    (window.innerWidth - 300) / window.innerHeight,\n    0.2,\n    5000\n  );\n  camera.position.set(0, 1.7, 4);\n  camera.lookAt(new THREE.Vector3(0, 1.7, 0));\n\n  //Add hemisphere light\n  let hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.1);\n  hemiLight.color.setHSL(0.6, 0.6, 0.6);\n  hemiLight.groundColor.setHSL(0.1, 1, 0.4);\n  hemiLight.position.set(0, 50, 0);\n  scene.add(hemiLight);\n\n  //Add directional light\n  let dirLight = new THREE.DirectionalLight(0xffffff, 1);\n  dirLight.color.setHSL(0.1, 1, 0.95);\n  dirLight.position.set(-1, 1.75, 1);\n  dirLight.position.multiplyScalar(100);\n  scene.add(dirLight);\n\n  dirLight.castShadow = true;\n\n  dirLight.shadow.mapSize.width = 2048;\n  dirLight.shadow.mapSize.height = 2048;\n\n  let d = 10;\n\n  dirLight.shadow.camera.left = -d;\n  dirLight.shadow.camera.right = d;\n  dirLight.shadow.camera.top = d;\n  dirLight.shadow.camera.bottom = -d;\n\n  dirLight.shadow.camera.far = 13500;\n\n  renderer.setClearColor(0xbfd1e5);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth - 300, window.innerHeight);\n\n  renderer.gammaInput = true;\n  renderer.gammaOutput = true;\n\n  renderer.shadowMap.enabled = true;\n\n  let target = createTarget({ scene });\n\n  return { camera, scene, renderer, target };\n}\n\nfunction createTarget({ scene }) {\n  let pos = { x: 0, y: 3, z: 0 };\n  let scale = { x: 0.1, y: 0.1, z: 0.1 };\n  //threeJS Section\n  let target = new THREE.Mesh(\n    new THREE.BoxBufferGeometry(),\n    new THREE.MeshPhongMaterial({ color: 0xff00ff })\n  );\n  target.position.set(pos.x, pos.y, pos.z);\n  target.scale.set(scale.x, scale.y, scale.z);\n  target.castShadow = true;\n  target.receiveShadow = true;\n  scene.add(target);\n  return (x, y, z) => target.position.set(x, y, z);\n}\n\nfunction createBlock({ physicsWorld, scene }) {\n  let pos = { x: 0, y: -1, z: 0 };\n  let scale = { x: 20, y: 2, z: 20 };\n  let quat = { x: 0, y: 0, z: 0, w: 1 };\n  let mass = 0;\n\n  //threeJS Section\n  let blockPlane = new THREE.Mesh(\n    new THREE.BoxBufferGeometry(),\n    new THREE.MeshPhongMaterial({ color: 0xa0afa4 })\n  );\n\n  blockPlane.position.set(pos.x, pos.y, pos.z);\n  blockPlane.scale.set(scale.x, scale.y, scale.z);\n\n  blockPlane.castShadow = true;\n  blockPlane.receiveShadow = true;\n\n  scene.add(blockPlane);\n\n  //Ammojs Section\n  let transform = new Ammo.btTransform();\n  transform.setIdentity();\n  transform.setOrigin(new Ammo.btVector3(pos.x, pos.y, pos.z));\n  transform.setRotation(new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));\n  let motionState = new Ammo.btDefaultMotionState(transform);\n\n  let colShape = new Ammo.btBoxShape(\n    new Ammo.btVector3(scale.x * 0.5, scale.y * 0.5, scale.z * 0.5)\n  );\n  colShape.setMargin(0.05);\n\n  let localInertia = new Ammo.btVector3(0, 0, 0);\n  colShape.calculateLocalInertia(mass, localInertia);\n\n  let rbInfo = new Ammo.btRigidBodyConstructionInfo(\n    mass,\n    motionState,\n    colShape,\n    localInertia\n  );\n  let body = new Ammo.btRigidBody(rbInfo);\n\n  physicsWorld.addRigidBody(body);\n}\n\nfunction resetRigidBodies({ physicsWorld, scene, rigidBodies }) {\n  for (let i = 0; i < rigidBodies.length; i++) {\n    let objThree = rigidBodies[i];\n    let objAmmo = objThree.userData.physicsBody;\n\n    physicsWorld.removeRigidBody(objAmmo);\n    try {\n      Ammo.destroy(objAmmo.getCollisionShape());\n      Ammo.destroy(objAmmo.getMotionState());\n      Ammo.destroy(objAmmo);\n    } catch (e) {\n      console.error(e);\n    }\n\n    scene.remove(objThree);\n  }\n  rigidBodies.length = 0;\n}\n\nfunction createDrone({ physicsWorld, scene, rigidBodies, droneData }) {\n  let pos = { x: 0, y: 5, z: 0 };\n\n  let quat = { x: 0, y: 0, z: 0, w: 1 };\n  let mass = droneData.totalMass / 1000;\n\n  let ball = new THREE.Group();\n  if (droneData.type === \"quadrotor +\") {\n    let radius = 2 / 100;\n    let mcd_meters = droneData.motorCenterDistance / 1000;\n    let ball1 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball1.position.set(mcd_meters, 0, 0);\n    ball1.castShadow = true;\n    ball.add(ball1);\n\n    let ball2 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball2.position.set(-mcd_meters, 0, 0);\n    ball2.castShadow = true;\n    ball.add(ball2);\n\n    let ball3 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball3.position.set(0, 0, -mcd_meters);\n    ball3.castShadow = true;\n    ball.add(ball3);\n\n    let ball4 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball4.position.set(0, 0, mcd_meters);\n    ball4.castShadow = true;\n    ball.add(ball4);\n\n    let rod1 = new THREE.Mesh(\n      new THREE.BoxBufferGeometry(radius / 2, radius / 2, mcd_meters * 2),\n      new THREE.MeshPhongMaterial({ color: 0x000000 })\n    );\n    rod1.position.set(0, 0, 0);\n    rod1.castShadow = true;\n    ball.add(rod1);\n\n    let rod2 = new THREE.Mesh(\n      new THREE.BoxBufferGeometry(mcd_meters * 2, radius / 2, radius / 2),\n      new THREE.MeshPhongMaterial({ color: 0x000000 })\n    );\n    rod2.position.set(0, 0, 0);\n    rod2.castShadow = true;\n    ball.add(rod2);\n  }\n\n  ball.position.set(pos.x, pos.y, pos.z);\n\n  ball.castShadow = true;\n  ball.receiveShadow = true;\n\n  scene.add(ball);\n\n  //Ammojs Section\n  let transform = new Ammo.btTransform();\n  transform.setIdentity();\n  let tempVec = new Ammo.btVector3(pos.x, pos.y, pos.z);\n  transform.setOrigin(tempVec);\n  Ammo.destroy(tempVec);\n\n  let tempQuat = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w);\n  transform.setRotation(tempQuat);\n  Ammo.destroy(tempQuat);\n  let motionState = new Ammo.btDefaultMotionState(transform);\n  Ammo.destroy(transform);\n\n  let colShape = new Ammo.btBoxShape(\n    new Ammo.btVector3(\n      droneData.motorCenterDistance / 1000,\n      2 / 100,\n      droneData.motorCenterDistance / 1000\n    )\n  );\n  colShape.setMargin(0.05);\n\n  let localInertia = new Ammo.btVector3(0, 0, 0);\n  colShape.calculateLocalInertia(mass, localInertia);\n\n  let rbInfo = new Ammo.btRigidBodyConstructionInfo(\n    mass,\n    motionState,\n    colShape,\n    localInertia\n  );\n  let body = new Ammo.btRigidBody(rbInfo);\n\n  body.setActivationState(4);\n\n  ball.userData.physicsBody = body;\n  physicsWorld.addRigidBody(body);\n\n  rigidBodies.push(ball);\n}\n\nfunction reset(state) {\n  resetRigidBodies(state);\n  createDrone(state);\n  state.sim = INITIAL_SIM_DATA();\n}\n\nfunction setupPhysicsWorld() {\n  let collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\n    dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n    overlappingPairCache = new Ammo.btDbvtBroadphase(),\n    solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n  let physicsWorld = new Ammo.btDiscreteDynamicsWorld(\n    dispatcher,\n    overlappingPairCache,\n    solver,\n    collisionConfiguration\n  );\n  physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\n\n  tmpTrans = new Ammo.btTransform();\n  return physicsWorld;\n}\n\nfunction updatePhysics(state, deltaTime) {\n  // Step world\n\n  let startTime = performance.now();\n  state.sim.deltaToSim = deltaTime;\n  state.sim.simTime = 0;\n  if (state.droneData) {\n    let simulateOneStep = (state) => {\n      let { sim, rigidBodies, physicsWorld, droneData } = state;\n\n      physicsWorld.stepSimulation(0.001, 0);\n\n      let drone = rigidBodies[0];\n      let droneAmmo = drone.userData.physicsBody;\n      droneAmmo.getMotionState().getWorldTransform(tmpTrans);\n      let [x, y, z] = [\n        tmpTrans.getOrigin().x(),\n        tmpTrans.getOrigin().y(),\n        tmpTrans.getOrigin().z(),\n      ];\n\n      let [vx, vy, vz] = [\n        droneAmmo.getLinearVelocity().x(),\n        droneAmmo.getLinearVelocity().y(),\n        droneAmmo.getLinearVelocity().z(),\n      ];\n\n      if (sim.stage === STAGE_TRAINING_ALT) {\n        {\n          //RESET ORIENTATION\n          droneAmmo.getMotionState().getWorldTransform(tmpTrans);\n          let quat = { x: 0, y: 0, z: 0, w: 1 };\n          let q = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w);\n          tmpTrans.setRotation(q);\n          Ammo.destroy(q);\n          droneAmmo.getMotionState().setWorldTransform(tmpTrans);\n        }\n\n        let ty = state.sim.training.alt.target(sim.ms);\n        state.target(0, ty, 0);\n\n        let altErr = ty - y;\n        if (sim.ms >= 0)\n          state.sim.training.alt.currentErrAcc += Math.pow(\n            Math.abs(altErr / 100),\n            1\n          );\n\n        sim.pids.alt.accI = sim.pids.alt.accI + altErr / 100;\n        sim.pids.alt.accI *= 0.995;\n\n        sim.pids.alt.pContrib = sim.pids.alt.p * altErr;\n        sim.pids.alt.dContrib = -sim.pids.alt.p * sim.pids.alt.d * vy;\n        sim.pids.alt.iContrib =\n          sim.pids.alt.p * sim.pids.alt.i * sim.pids.alt.accI;\n\n        sim.throttle = clamp(\n          sim.pids.alt.pContrib + sim.pids.alt.dContrib + sim.pids.alt.iContrib,\n          0,\n          1\n        );\n      }\n\n      {\n        let batteryDrain =\n          (sim.throttle * (100 * (droneData.batteryC * (1 / 1000)))) / 3600;\n\n        let oldBattery = sim.battery;\n        sim.battery = Math.max(0, sim.battery - batteryDrain);\n        batteryDrain = oldBattery - sim.battery;\n        let jouleCons = (batteryDrain / 100) * droneData.j;\n        let wattCons = jouleCons / 0.001;\n        let lift = droneData.motorLiftPerWatt * wattCons;\n\n        let liftVec = new Ammo.btVector3(0, lift / 1000, 0);\n        let relPos = new Ammo.btVector3(0, 0, 0);\n        droneAmmo.applyImpulse(liftVec, relPos);\n        Ammo.destroy(liftVec);\n        Ammo.destroy(relPos);\n      }\n\n      if (sim.ms % 30 === 0) {\n        sim.batteryChart.push(sim.battery);\n        sim.yChart.push(y);\n        sim.vyChart.push(vy);\n      }\n\n      sim.ms += 1;\n\n      if (sim.stage.includes(\"training\") && sim.ms === TRAINING_TIME_MS) {\n        let oldSim = state.sim;\n\n        reset(state);\n        state.sim.training = oldSim.training;\n        state.sim.pids = oldSim.pids;\n\n        //Adjust pid\n\n        console.log(\n          state.sim.training.alt.errs.length +\n            \" : \" +\n            state.sim.training.alt.currentErrAcc +\n            \" / \",\n          state.sim.pids.alt.p +\n            \"/\" +\n            state.sim.pids.alt.i +\n            \"/\" +\n            state.sim.pids.alt.d\n        );\n        if (state.sim.training.alt.errs.length > 0) {\n          let before =\n            state.sim.training.alt[state.sim.training.alt.currentDir];\n          if (\n            state.sim.training.alt.currentErrAcc <\n            state.sim.training.alt.errs[state.sim.training.alt.errs.length - 1]\n          ) {\n            // console.log(\"WAS GOOD\");\n\n            state.sim.training.alt[state.sim.training.alt.currentDir] *= 1.2;\n          } else {\n            // console.log(\"WAS BAD\");\n            state.sim.training.alt[state.sim.training.alt.currentDir] *= -0.5;\n          }\n          // console.log(\n          //   state.sim.training.alt.currentDir +\n          //     \" from \" +\n          //     before +\n          //     \" to \" +\n          //     state.sim.training.alt[state.sim.training.alt.currentDir]\n          // );\n        }\n\n        state.sim.training.alt.errs.push(state.sim.training.alt.currentErrAcc);\n        state.sim.training.alt.currentErrAcc = 0;\n        state.sim.training.alt.currentDir =\n          state.sim.training.alt.currentDir === \"p\"\n            ? \"d\"\n            : state.sim.training.alt.currentDir === \"d\"\n            ? \"i\"\n            : \"p\";\n\n        state.sim.pids.alt[state.sim.training.alt.currentDir] +=\n          state.sim.training.alt[state.sim.training.alt.currentDir];\n\n        state.sim.pids.alt[state.sim.training.alt.currentDir] = Math.max(\n          0,\n          state.sim.pids.alt[state.sim.training.alt.currentDir]\n        );\n\n        // console.log(\n        //   \"NEW PARAM: \",\n        //   state.sim.training.alt.currentDir +\n        //     \" = \" +\n        //     state.sim.training.alt.currentDir +\n        //     (state.sim.training.alt[state.sim.training.alt.currentDir] > 0\n        //       ? \" + \"\n        //       : \" - \") +\n        //     Math.abs(state.sim.training.alt[state.sim.training.alt.currentDir])\n        // );\n\n        state.sim.training.alt.accI = 0;\n\n        if (state.sim.training.alt.errs.length > 5) {\n          let a = state.sim.training.alt.errs;\n          let l = a.length;\n          if (\n            Math.abs(a[l - 5] - a[l - 4]) / a[l - 4] < TRAINING_EPSILON &&\n            Math.abs(a[l - 4] - a[l - 3]) / a[l - 3] < TRAINING_EPSILON &&\n            Math.abs(a[l - 3] - a[l - 2]) / a[l - 2] < TRAINING_EPSILON &&\n            Math.abs(a[l - 2] - a[l - 1]) / a[l - 1] < TRAINING_EPSILON\n          ) {\n            state.sim.stage = STAGE_FREE;\n            state.sim.training.maxspeed = false;\n          }\n        }\n      }\n    };\n\n    if (!state.sim.training.maxspeed) {\n      for (let step = 0; step < deltaTime; step++) {\n        simulateOneStep(state);\n      }\n    } else {\n      let stepDone = 0;\n      let msPerStep = 1;\n      while (\n        performance.now() - startTime + msPerStep <\n        Math.min(deltaTime, 1000 / 60)\n      ) {\n        simulateOneStep(state);\n        stepDone += 1;\n        msPerStep = (performance.now() - startTime) / stepDone;\n      }\n    }\n  }\n  state.sim.simTime = performance.now() - startTime;\n  // Update rigid bodies\n  for (let i = 0; i < state.rigidBodies.length; i++) {\n    let objThree = state.rigidBodies[i];\n    let objAmmo = objThree.userData.physicsBody;\n    let ms = objAmmo.getMotionState();\n    if (ms) {\n      ms.getWorldTransform(tmpTrans);\n      let p = tmpTrans.getOrigin();\n      let q = tmpTrans.getRotation();\n      objThree.position.set(p.x(), p.y(), p.z());\n      objThree.quaternion.set(q.x(), q.y(), q.z(), q.w());\n    }\n  }\n}\n\nfunction computeTotalMass(drone) {\n  return {\n    totalMass:\n      drone.escMass * 4 +\n      drone.motorMass * 4 +\n      drone.batteryMass +\n      drone.frameMass,\n  };\n}\n\nfunction computeMaxElec(drone) {\n  let v = drone.batteryS * 3.7;\n  let mA = drone.batteryC * drone.batteryCapacity; //mA\n  let w = (v * mA) / 1000;\n  let j = ((drone.batteryCapacity * 3600) / 1000) * v;\n  return { v, mA, w, j };\n}\n\nexport default function EditorFrag() {\n  let stateRef = useRef(null);\n  let canvasRef = useRef();\n  let [droneData, setDroneData_] = useState(INITIAL_DRONE_DATA());\n  let [simData, setSimData] = useState(INITIAL_SIM_DATA());\n  let [droneComputed, setDroneComputed] = useState(false);\n  function setDroneData(arg) {\n    setDroneData_(arg);\n    setDroneComputed(false);\n  }\n\n  useEffect(() => {\n    if (droneComputed) {\n      if (stateRef.current?.alive) {\n        stateRef.current.droneData = droneData;\n        reset(stateRef.current);\n      }\n    } else {\n      let newDrone = {\n        ...cloneDeep(droneData),\n        ...computeMaxElec(droneData),\n        ...computeTotalMass(droneData),\n      };\n      if (stateRef.current?.alive) stateRef.current.droneData = newDrone;\n      setDroneData_(newDrone);\n      setDroneComputed(true);\n    }\n  }, [droneData, droneComputed]);\n  useEffect(() => {\n    async function test() {\n      console.log(\"Trying to load Ammo.js\");\n      try {\n        Ammo = await Ammo();\n\n        stateRef.current = init(canvasRef.current);\n        stateRef.current.physicsWorld = setupPhysicsWorld();\n\n        stateRef.current.rigidBodies = [];\n        createBlock(stateRef.current);\n        stateRef.current.alive = true;\n        setDroneComputed(false);\n        stateRef.current.sim = INITIAL_SIM_DATA();\n      } catch (e) {\n        console.error(\"ammo: \", e);\n        setTimeout(() => test(), 500);\n      }\n    }\n    if (Ammo?.btDefaultCollisionConfiguration == undefined) test();\n  }, []);\n\n  useAnimationFrame((dt) => {\n    if (stateRef.current != null) {\n      let {\n        camera,\n        scene,\n        renderer,\n\n        sim,\n        droneData,\n        rigidBodies,\n        physicsWorld,\n      } = stateRef.current;\n\n      if (rigidBodies.length > 0) updatePhysics(stateRef.current, dt);\n      let c1 = cloneDeep(sim);\n      setSimData(c1);\n      renderer.render(scene, camera);\n    }\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n\n        background: \"rgb(62, 62, 62)\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div style={{ position: \"relative\", overflow: \"hidden\" }}>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div> {simData.ms.toFixed(2) + \"ms\"}</div>\n          <div> {simData.simTime.toFixed(2) + \"ms\"}</div>\n          <div> {simData.deltaToSim.toFixed(2) + \"ms\"}</div>\n\n          <Chart\n            name={\"battery\"}\n            arrf={() => stateRef.current?.sim?.batteryChart}\n          ></Chart>\n          <Chart name={\"y\"} arrf={() => stateRef.current?.sim?.yChart}></Chart>\n\n          <Chart\n            name={\"errs\"}\n            arrf={() => stateRef.current?.sim?.training.alt.errs}\n          ></Chart>\n          <div>\n            {(() => {\n              let pid = simData.pids.alt;\n              let dpid = simData.training.alt;\n              return (\n                <div>\n                  <div>\n                    p: {pid.p} + {dpid.p}\n                  </div>\n                  <div>\n                    i: {pid.i} + {dpid.i}\n                  </div>\n                  <div>\n                    d: {pid.d} + {dpid.d}\n                  </div>\n                </div>\n              );\n            })()}\n          </div>\n\n          <div>\n            <span>p</span>\n            <input\n              type=\"range\"\n              min=\"-1\"\n              max=\"1\"\n              step=\"0.01\"\n              value={simData.pids.alt.pContrib}\n            ></input>\n          </div>\n          <div>\n            <span>i</span>\n            <input\n              type=\"range\"\n              min=\"-1\"\n              max=\"1\"\n              step=\"0.01\"\n              value={simData.pids.alt.iContrib}\n            ></input>\n          </div>\n          <div>\n            <span>d</span>\n            <input\n              type=\"range\"\n              min=\"-1\"\n              max=\"1\"\n              step=\"0.01\"\n              value={simData.pids.alt.dContrib}\n            ></input>\n          </div>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n            left: \"50%\",\n            transform: \"translate(-50%,0%)\",\n          }}\n        >\n          <div\n            style={{\n              background: \"rgba(0,0,0,0.2)\",\n              borderRadius: \"5px\",\n              padding: \"5px\",\n              color: \"white\",\n              cursor: \"pointer\",\n            }}\n            onClick={() =>\n              (stateRef.current.sim.training.maxspeed = !stateRef.current.sim\n                .training.maxspeed)\n            }\n          >\n            MAX SPEED : {simData.training.maxspeed ? \"True\" : \"False\"}\n          </div>\n\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            value=\"0\"\n            step=\"0.01\"\n            value={simData.throttle}\n            onChange={(e) =>\n              (stateRef.current.sim.throttle = parseFloat(e.target.value))\n            }\n          ></input>\n        </div>\n        <canvas ref={canvasRef} style={{ flex: \"1 1 auto\" }}></canvas>\n      </div>\n\n      <div style={{ width: \"300px\", overflowY: \"auto\", height: \"100%\" }}>\n        <NumberIn\n          name={\"motor center distance\"}\n          unit={\"mm\"}\n          value={droneData.motorCenterDistance}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorCenterDistance: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"motor kv\"}\n          unit={\"RPM/V\"}\n          value={droneData.motorKV}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorKV: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"single motor mass\"}\n          unit={\"g\"}\n          value={droneData.motorMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"motor lift\"}\n          unit={\"N/W\"}\n          value={droneData.motorLiftPerWatt}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorLiftPerWatt: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"single esc mass\"}\n          unit={\"g\"}\n          value={droneData.escMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, escMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery mass\"}\n          unit={\"g\"}\n          value={droneData.batteryMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery capacity\"}\n          unit={\"mAh\"}\n          value={droneData.batteryCapacity}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryCapacity: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery S\"}\n          unit={\"\"}\n          value={droneData.batteryS}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryS: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"battery P\"}\n          unit={\"\"}\n          value={droneData.batteryP}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryP: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery C\"}\n          unit={\"h-1\"}\n          value={droneData.batteryC}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryC: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"frame mass\"}\n          unit={\"g\"}\n          value={droneData.frameMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, frameMass: v };\n            })\n          }\n        ></NumberIn>\n        <TextOut\n          name={\"total mass\"}\n          unit={\"g\"}\n          value={droneData.totalMass}\n        ></TextOut>\n        <TextOut name={\"total V\"} unit={\"V\"} value={droneData.v}></TextOut>\n        <TextOut\n          name={\"max current\"}\n          unit={\"mA\"}\n          value={droneData.mA}\n        ></TextOut>\n        <TextOut name={\"max power\"} unit={\"W\"} value={droneData.w}></TextOut>\n      </div>\n    </div>\n  );\n}\n\nfunction NumberIn({ name, unit, value, setValue }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ textAlign: \"left\" }}>{name}</div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          width: \"120px\",\n          flex: \"none\",\n        }}\n      >\n        <input\n          style={{ width: \"60px\" }}\n          value={value}\n          type=\"number\"\n          onChange={(e) => {\n            let fl = parseFloat(e.target.value);\n            setValue(fl);\n          }}\n        ></input>{\" \"}\n        <span style={{ marginLeft: \"5px\" }}>{unit}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction TextOut({ name, unit, value }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ textAlign: \"left\" }}>{name}</div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          width: \"120px\",\n          flex: \"none\",\n        }}\n      >\n        <input disabled style={{ width: \"60px\" }} value={value}></input>{\" \"}\n        <span style={{ marginLeft: \"5px\" }}>{unit}</span>\n      </div>\n    </div>\n  );\n}\n\nconst INIT_CHART = () => {\n  return {\n    min: 9999,\n    max: -9999,\n    lastComputeIndex: -1,\n  };\n};\nfunction Chart({ arrf, name }) {\n  let ref = useRef();\n\n  let stateRef = useRef(INIT_CHART());\n  let [current, setCurrent] = useState(0);\n  let w = 200;\n  let h = 200;\n  useAnimationFrame((dt) => {\n    //\n    let arr = arrf();\n    if (!ref.current || !arr || !stateRef.current) return;\n\n    if (stateRef.current.lastComputeIndex > arr.length - 1)\n      stateRef.current = INIT_CHART();\n\n    let state = stateRef.current;\n    ref.current.width = w;\n    ref.current.height = h;\n    let ctx = ref.current.getContext(\"2d\");\n    ctx.width = w;\n    ctx.height = h;\n    ctx.fillStyle = \"rgba(0,0,0,0.2)\";\n    ctx.fillRect(0, 0, w, h);\n\n    if (arr.length > 0) setCurrent(arr[arr.length - 1]);\n\n    for (let i = state.lastComputeIndex + 1; i < arr.length; i++) {\n      state.min = Math.min(state.min, arr[i]);\n      state.max = Math.max(state.max, arr[i]);\n    }\n    state.lastComputeIndex = arr.length - 1;\n    let split = state.max - state.min;\n    let max = state.max + split / 10;\n    let min = state.min - split / 10;\n\n    let toY = (v) => h - (h * (v - min)) / (max - min);\n    let toX = (v) => (v * w) / (arr.length - 1);\n    ctx.beginPath();\n    ctx.moveTo(toX(0), toY(arr[0] || 0));\n    arr.forEach((v, i) => {\n      ctx.lineTo(toX(i), toY(v));\n    });\n    ctx.strokeStyle = \"#fff\";\n    ctx.stroke();\n  });\n\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        background: \"rgba(0,0,0,0.6)\",\n        color: \"white\",\n        width: w + \"px\",\n      }}\n    >\n      <div>\n        {name}: {current.toFixed(2)}\n      </div>\n      <canvas ref={ref} style={{ width: w + \"px\", height: h + \"px\" }}></canvas>\n    </div>\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EditorFrag from \"./frag/Editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EditorFrag></EditorFrag>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}