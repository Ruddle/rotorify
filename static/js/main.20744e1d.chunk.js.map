{"version":3,"sources":["logo.svg","frag/utils.js","frag/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["clamp","x","a","b","Math","max","min","useAnimationFrame","callback","requestRef","React","useRef","previousTimeRef","animate","time","undefined","current","deltaTime","requestAnimationFrame","useEffect","cancelAnimationFrame","Ammo","window","THREE","require","cloneDeep","tmpTrans","init","canvas","camera","scene","renderer","Scene","WebGLRenderer","antialias","setSize","innerWidth","innerHeight","background","Color","PerspectiveCamera","position","set","lookAt","Vector3","hemiLight","HemisphereLight","color","setHSL","groundColor","add","dirLight","DirectionalLight","multiplyScalar","castShadow","shadow","mapSize","width","height","left","right","top","bottom","far","setClearColor","setPixelRatio","devicePixelRatio","gammaInput","gammaOutput","shadowMap","enabled","createBlock","physicsWorld","pos","scale","quat","blockPlane","Mesh","BoxBufferGeometry","MeshPhongMaterial","receiveShadow","transform","btTransform","setIdentity","setOrigin","btVector3","setRotation","btQuaternion","motionState","btDefaultMotionState","colShape","btBoxShape","setMargin","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","body","btRigidBody","addRigidBody","reset","state","rigidBodies","i","length","objThree","objAmmo","userData","physicsBody","removeRigidBody","destroy","getCollisionShape","getMotionState","e","console","error","remove","resetRigidBodies","droneData","mass","totalMass","ball","Group","type","radius","mcd_meters","motorCenterDistance","ball1","SphereBufferGeometry","ball2","ball3","ball4","rod1","rod2","setActivationState","push","createDrone","sim","INITIAL_SIM_DATA","setupPhysicsWorld","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","overlappingPairCache","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","setGravity","battery","batteryChart","yChart","vyChart","throttle","ms","stage","pids","alt","p","d","accI","simTime","deltaToSim","EditorFrag","stateRef","canvasRef","useState","motorKV","motorMass","motorLiftPerWatt","escMass","batteryMass","batteryS","batteryP","batteryC","batteryCapacity","frameMass","v","mA","w","j","setDroneData_","simData","setSimData","droneComputed","setDroneComputed","setDroneData","arg","alive","newDrone","drone","computeMaxElec","test","log","setTimeout","dt","startTime","performance","now","simulateOneStep","stepSimulation","droneAmmo","getWorldTransform","y","getOrigin","z","vy","getLinearVelocity","q","setWorldTransform","altErr","batteryDrain","oldBattery","wattCons","lift","liftVec","relPos","applyImpulse","step","getRotation","quaternion","updatePhysics","render","style","display","flexDirection","overflow","toFixed","Chart","name","arrf","value","parseFloat","target","ref","flex","overflowY","NumberIn","unit","setValue","old","TextOut","justifyContent","padding","textAlign","alignItems","onChange","fl","marginLeft","disabled","lastComputeIndex","setCurrent","h","arr","ctx","getContext","fillStyle","fillRect","split","toY","toX","beginPath","moveTo","forEach","lineTo","strokeStyle","stroke","border","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oMAAe,I,iDCCJA,EAAQ,SAACC,EAAGC,EAAGC,GAAP,OAAaC,KAAKC,IAAIH,EAAGE,KAAKE,IAAIH,EAAGF,KAK3CM,EAAoB,SAACC,GAGhC,IAAMC,EAAaC,IAAMC,SACnBC,EAAkBF,IAAMC,SAExBE,EAAU,SAAVA,EAAWC,GACf,QAA+BC,GAA3BH,EAAgBI,QAAsB,CACxC,IAAMC,EAAYH,EAAOF,EAAgBI,QACzCR,EAASS,GAEXL,EAAgBI,QAAUF,EAC1BL,EAAWO,QAAUE,sBAAsBL,IAG7CH,IAAMS,WAAU,WAEd,OADAV,EAAWO,QAAUE,sBAAsBL,GACpC,kBAAMO,qBAAqBX,EAAWO,YAC5C,K,WCpBDK,EAAOC,OAAOD,KAEZE,EAAQC,EAAQ,IAElBC,GADOD,EAAQ,IACHA,EAAQ,KAIpBE,GAFIF,EAAQ,IAED,MAaf,SAASG,EAAKC,GACZ,IAAIC,EAAQC,EAAOC,EAEnBD,EAAQ,IAAIP,EAAMS,OAElBD,EAAW,IAAIR,EAAMU,cAAc,CAAEL,OAAQA,EAAQM,WAAW,KACvDC,QAAQb,OAAOc,WAAa,IAAKd,OAAOe,cAIjDP,EAAQ,IAAIP,EAAMS,OACZM,WAAa,IAAIf,EAAMgB,MAAM,WAGnCV,EAAS,IAAIN,EAAMiB,kBACjB,IACClB,OAAOc,WAAa,KAAOd,OAAOe,YACnC,GACA,MAEKI,SAASC,IAAI,EAAG,IAAK,GAC5Bb,EAAOc,OAAO,IAAIpB,EAAMqB,QAAQ,EAAG,IAAK,IAGxC,IAAIC,EAAY,IAAItB,EAAMuB,gBAAgB,SAAU,SAAU,IAC9DD,EAAUE,MAAMC,OAAO,GAAK,GAAK,IACjCH,EAAUI,YAAYD,OAAO,GAAK,EAAG,IACrCH,EAAUJ,SAASC,IAAI,EAAG,GAAI,GAC9BZ,EAAMoB,IAAIL,GAGV,IAAIM,EAAW,IAAI5B,EAAM6B,iBAAiB,SAAU,GACpDD,EAASJ,MAAMC,OAAO,GAAK,EAAG,KAC9BG,EAASV,SAASC,KAAK,EAAG,KAAM,GAChCS,EAASV,SAASY,eAAe,KACjCvB,EAAMoB,IAAIC,GAEVA,EAASG,YAAa,EAEtBH,EAASI,OAAOC,QAAQC,MAAQ,KAChCN,EAASI,OAAOC,QAAQE,OAAS,KAoBjC,OAhBAP,EAASI,OAAO1B,OAAO8B,MAFf,GAGRR,EAASI,OAAO1B,OAAO+B,MAHf,GAIRT,EAASI,OAAO1B,OAAOgC,IAJf,GAKRV,EAASI,OAAO1B,OAAOiC,QALf,GAORX,EAASI,OAAO1B,OAAOkC,IAAM,MAE7BhC,EAASiC,cAAc,UACvBjC,EAASkC,cAAc3C,OAAO4C,kBAC9BnC,EAASI,QAAQb,OAAOc,WAAa,IAAKd,OAAOe,aAEjDN,EAASoC,YAAa,EACtBpC,EAASqC,aAAc,EAEvBrC,EAASsC,UAAUC,SAAU,EAEtB,CAAEzC,SAAQC,QAAOC,YAG1B,SAASwC,EAAT,GAA+C,IAAxBC,EAAuB,EAAvBA,aAAc1C,EAAS,EAATA,MAC/B2C,EAAW,EAAXA,GAAkB,EAAlBA,EAAwB,EACxBC,EAAa,GAAbA,EAAoB,EAApBA,EAA0B,GAC1BC,EAAY,EAAZA,EAAkB,EAAlBA,EAAwB,EAAxBA,EAA8B,EAI9BC,EAAa,IAAIrD,EAAMsD,KACzB,IAAItD,EAAMuD,kBACV,IAAIvD,EAAMwD,kBAAkB,CAAEhC,MAAO,YAGvC6B,EAAWnC,SAASC,IAAI+B,EAAOA,EAAOA,GACtCG,EAAWF,MAAMhC,IAAIgC,EAASA,EAASA,GAEvCE,EAAWtB,YAAa,EACxBsB,EAAWI,eAAgB,EAE3BlD,EAAMoB,IAAI0B,GAGV,IAAIK,EAAY,IAAI5D,EAAK6D,YACzBD,EAAUE,cACVF,EAAUG,UAAU,IAAI/D,EAAKgE,UAAUZ,EAAOA,EAAOA,IACrDQ,EAAUK,YAAY,IAAIjE,EAAKkE,aAAaZ,EAAQA,EAAQA,EAAQA,IACpE,IAAIa,EAAc,IAAInE,EAAKoE,qBAAqBR,GAE5CS,EAAW,IAAIrE,EAAKsE,WACtB,IAAItE,EAAKgE,UAAoB,GAAVX,EAAyB,GAAVA,EAAyB,GAAVA,IAEnDgB,EAASE,UAAU,KAEnB,IAAIC,EAAe,IAAIxE,EAAKgE,UAAU,EAAG,EAAG,GAC5CK,EAASI,sBA7BE,EA6B0BD,GAErC,IAAIE,EAAS,IAAI1E,EAAK2E,4BA/BX,EAiCTR,EACAE,EACAG,GAEEI,EAAO,IAAI5E,EAAK6E,YAAYH,GAEhCvB,EAAa2B,aAAaF,GA2H5B,SAASG,EAAMC,IAxHf,YACE,IAD+D,IAArC7B,EAAoC,EAApCA,aAAc1C,EAAsB,EAAtBA,MAAOwE,EAAe,EAAfA,YACtCC,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IAAK,CAC3C,IAAIE,EAAWH,EAAYC,GACvBG,EAAUD,EAASE,SAASC,YAEhCpC,EAAaqC,gBAAgBH,GAC7B,IACErF,EAAKyF,QAAQJ,EAAQK,qBACrB1F,EAAKyF,QAAQJ,EAAQM,kBACrB3F,EAAKyF,QAAQJ,GACb,MAAOO,GACPC,QAAQC,MAAMF,GAGhBnF,EAAMsF,OAAOX,GAEfH,EAAYE,OAAS,EAyGrBa,CAAiBhB,GAtGnB,YAAuE,IAAhD7B,EAA+C,EAA/CA,aAAc1C,EAAiC,EAAjCA,MAAOwE,EAA0B,EAA1BA,YAAagB,EAAa,EAAbA,UACnD7C,EAAW,EAAXA,EAAiB,EAAjBA,EAAuB,EAEvBE,EAAY,EAAZA,EAAkB,EAAlBA,EAAwB,EAAxBA,EAA8B,EAC9B4C,EAAOD,EAAUE,UAAY,IAE7BC,EAAO,IAAIlG,EAAMmG,MACrB,GAAuB,gBAAnBJ,EAAUK,KAAwB,CACpC,IAAIC,EAAS,IACTC,EAAaP,EAAUQ,oBAAsB,IAC7CC,EAAQ,IAAIxG,EAAMsD,KACpB,IAAItD,EAAMyG,qBAAqBJ,GAC/B,IAAIrG,EAAMwD,kBAAkB,CAAEhC,MAAO,YAEvCgF,EAAMtF,SAASC,IAAImF,EAAY,EAAG,GAClCE,EAAMzE,YAAa,EACnBmE,EAAKvE,IAAI6E,GAET,IAAIE,EAAQ,IAAI1G,EAAMsD,KACpB,IAAItD,EAAMyG,qBAAqBJ,GAC/B,IAAIrG,EAAMwD,kBAAkB,CAAEhC,MAAO,YAEvCkF,EAAMxF,SAASC,KAAKmF,EAAY,EAAG,GACnCI,EAAM3E,YAAa,EACnBmE,EAAKvE,IAAI+E,GAET,IAAIC,EAAQ,IAAI3G,EAAMsD,KACpB,IAAItD,EAAMyG,qBAAqBJ,GAC/B,IAAIrG,EAAMwD,kBAAkB,CAAEhC,MAAO,YAEvCmF,EAAMzF,SAASC,IAAI,EAAG,GAAImF,GAC1BK,EAAM5E,YAAa,EACnBmE,EAAKvE,IAAIgF,GAET,IAAIC,EAAQ,IAAI5G,EAAMsD,KACpB,IAAItD,EAAMyG,qBAAqBJ,GAC/B,IAAIrG,EAAMwD,kBAAkB,CAAEhC,MAAO,YAEvCoF,EAAM1F,SAASC,IAAI,EAAG,EAAGmF,GACzBM,EAAM7E,YAAa,EACnBmE,EAAKvE,IAAIiF,GAET,IAAIC,EAAO,IAAI7G,EAAMsD,KACnB,IAAItD,EAAMuD,kBAAkB8C,IAAYA,IAAyB,EAAbC,GACpD,IAAItG,EAAMwD,kBAAkB,CAAEhC,MAAO,KAEvCqF,EAAK3F,SAASC,IAAI,EAAG,EAAG,GACxB0F,EAAK9E,YAAa,EAClBmE,EAAKvE,IAAIkF,GAET,IAAIC,EAAO,IAAI9G,EAAMsD,KACnB,IAAItD,EAAMuD,kBAA+B,EAAb+C,EAAgBD,IAAYA,KACxD,IAAIrG,EAAMwD,kBAAkB,CAAEhC,MAAO,KAEvCsF,EAAK5F,SAASC,IAAI,EAAG,EAAG,GACxB2F,EAAK/E,YAAa,EAClBmE,EAAKvE,IAAImF,GAGXZ,EAAKhF,SAASC,IAAI+B,EAAOA,EAAOA,GAEhCgD,EAAKnE,YAAa,EAClBmE,EAAKzC,eAAgB,EAErBlD,EAAMoB,IAAIuE,GAGV,IAAIxC,EAAY,IAAI5D,EAAK6D,YACzBD,EAAUE,cACVF,EAAUG,UAAU,IAAI/D,EAAKgE,UAAUZ,EAAOA,EAAOA,IACrDQ,EAAUK,YAAY,IAAIjE,EAAKkE,aAAaZ,EAAQA,EAAQA,EAAQA,IACpE,IAAIa,EAAc,IAAInE,EAAKoE,qBAAqBR,GAE5CS,EAAW,IAAIrE,EAAKsE,WACtB,IAAItE,EAAKgE,UACPiC,EAAUQ,oBAAsB,IAChC,IACAR,EAAUQ,oBAAsB,MAGpCpC,EAASE,UAAU,KAEnB,IAAIC,EAAe,IAAIxE,EAAKgE,UAAU,EAAG,EAAG,GAC5CK,EAASI,sBAAsByB,EAAM1B,GAErC,IAAIE,EAAS,IAAI1E,EAAK2E,4BACpBuB,EACA/B,EACAE,EACAG,GAEEI,EAAO,IAAI5E,EAAK6E,YAAYH,GAEhCE,EAAKqC,mBAAmB,GAExBb,EAAKd,SAASC,YAAcX,EAC5BzB,EAAa2B,aAAaF,GAE1BK,EAAYiC,KAAKd,GAKjBe,CAAYnC,GACZA,EAAMoC,IAAMC,IAGd,SAASC,IACP,IAAIC,EAAyB,IAAIvH,EAAKwH,gCACpCC,EAAa,IAAIzH,EAAK0H,sBAAsBH,GAC5CI,EAAuB,IAAI3H,EAAK4H,iBAChCC,EAAS,IAAI7H,EAAK8H,oCAEhB3E,EAAe,IAAInD,EAAK+H,wBAC1BN,EACAE,EACAE,EACAN,GAKF,OAHApE,EAAa6E,WAAW,IAAIhI,EAAKgE,UAAU,GAAI,IAAK,IAEpD3D,EAAW,IAAIL,EAAK6D,YACbV,EA4GT,IAqBMkE,EAAmB,WACvB,MAAO,CACLY,QAAS,IACTC,aAAc,GACdC,OAAQ,GACRC,QAAS,GACTC,SAAU,EACVC,GAAI,EACJC,MAAO,OACPC,KAAM,CACJC,IAAK,CACHC,EAAG,EACHxD,EAAG,GACHyD,EAAG,IAEHC,KAAM,KAGVC,QAAS,EACTC,WAAY,IAsBD,SAASC,IAAc,IAAD,EAC/BC,EAAW1J,iBAAO,MAClB2J,EAAY3J,mBAChB,EAAiC4J,mBAhE1B,CACL5C,KAAM,cACNG,oBAAqB,IACrB0C,QAAS,IACTC,UAAW,GACXC,iBAAkB,IAClBC,QAAS,GACTC,YAAa,IACbC,SAAU,EACVC,SAAU,EACVC,SAAU,GACVC,gBAAiB,IACjBC,UAAW,IACXzD,UAAW,EACX0D,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,EAAG,IA+CL,mBAAK/D,EAAL,KAAgBgE,EAAhB,KACA,EAA4Bf,mBAAS7B,KAArC,mBAAK6C,EAAL,KAAcC,EAAd,KACA,EAAwCjB,oBAAS,GAAjD,mBAAKkB,EAAL,KAAoBC,EAApB,KACA,SAASC,EAAaC,GACpBN,EAAcM,GACdF,GAAiB,GA4DnB,OAzDAvK,qBAAU,WACR,GAAIsK,EAAe,CAAC,IAAD,GACjB,UAAIpB,EAASrJ,eAAb,aAAI,EAAkB6K,SACpBxB,EAASrJ,QAAQsG,UAAYA,EAC7BlB,EAAMiE,EAASrJ,cAEZ,CAAC,IAAD,EACD8K,EAAQ,uCACPrK,EAAU6F,IA3BrB,SAAwByE,GACtB,IAAIb,EAAqB,IAAjBa,EAAMlB,SACVM,EAAKY,EAAMhB,SAAWgB,EAAMf,gBAGhC,MAAO,CAAEE,IAAGC,KAAIC,EAFPF,EAAIC,EAAM,IAEAE,EADe,KAAxBU,EAAMf,gBAA0B,IAAQE,GAwBzCc,CAAe1E,IArCjB,CACLE,UACkB,GAHIuE,EAuCEzE,GApChBqD,QACY,EAAlBoB,EAAMtB,UACNsB,EAAMnB,YACNmB,EAAMd,aAmCN,UAAIZ,EAASrJ,eAAb,aAAI,EAAkB6K,SAAOxB,EAASrJ,QAAQsG,UAAYwE,GAC1DR,EAAcQ,GACdJ,GAAiB,GA3CvB,IAA0BK,IA6CrB,CAACzE,EAAWmE,IACftK,qBAAU,WAAO,IAAD,WACC8K,IADD,2EACd,sBAAA/L,EAAA,6DACEgH,QAAQgF,IAAI,0BADd,kBAGiB7K,IAHjB,OAGIA,EAHJ,OAKIgJ,EAASrJ,QAAUW,EAAK2I,EAAUtJ,SAClCqJ,EAASrJ,QAAQwD,aAAemE,IAEhC0B,EAASrJ,QAAQsF,YAAc,GAC/B/B,EAAY8F,EAASrJ,SACrBqJ,EAASrJ,QAAQ6K,OAAQ,EACzBH,GAAiB,GACjBrB,EAASrJ,QAAQyH,IAAMC,IAZ3B,kDAcIxB,QAAQC,MAAM,SAAd,MACAgF,YAAW,kBAAMF,MAAQ,KAf7B,2DADc,2BAmB+BlL,IAArC,QAAJ,EAAAM,SAAA,eAAMwH,kCAA8CoD,MACvD,IAEH1L,GAAkB,SAAC6L,GACjB,GAAwB,MAApB/B,EAASrJ,QAAiB,CAC5B,MASIqJ,EAASrJ,QARXa,EADF,EACEA,OACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,SAEA0G,EALF,EAKEA,IACAnB,EANF,EAMEA,UACAhB,EAPF,EAOEA,aAlOR,WAEErF,GACC,IAFCuD,EAEF,EAFEA,aAAc8B,EAEhB,EAFgBA,YAAamC,EAE7B,EAF6BA,IAAKnB,EAElC,EAFkCA,UAK9B+E,EAAYC,YAAYC,MAG5B,GAFA9D,EAAI0B,WAAalJ,EACjBwH,EAAIyB,QAAU,EACV5C,EAAW,CAAC,IACLkF,EAAT,WACEhI,EAAaiI,eAAe,KAAY,GAExC,IACIC,EADQpG,EAAY,GACFK,SAASC,YAC/B8F,EAAU1F,iBAAiB2F,kBAAkBjL,GAC7C,IAAQkL,EAAQ,CACdlL,EAASmL,YAAY5M,IACrByB,EAASmL,YAAYD,IACrBlL,EAASmL,YAAYC,KAHvB,GAKSC,EAAU,CACjBL,EAAUM,oBAAoB/M,IAC9ByM,EAAUM,oBAAoBJ,IAC9BF,EAAUM,oBAAoBF,KAHhC,GAMA,GAAkB,qBAAdrE,EAAImB,MAA8B,CAGlC8C,EAAU1F,iBAAiB2F,kBAAkBjL,GAC7C,IAAIiD,EAAO,CAAE1E,EAAG,EAAG2M,EAAG,EAAGE,EAAG,EAAG1B,EAAG,GAC9B6B,EAAI,IAAI5L,EAAKkE,aAAaZ,EAAK1E,EAAG0E,EAAKiI,EAAGjI,EAAKmI,EAAGnI,EAAKyG,GAC3D1J,EAAS4D,YAAY2H,GACrB5L,EAAKyF,QAAQmG,GACbP,EAAU1F,iBAAiBkG,kBAAkBxL,GAG/C,IAAIyL,EAAS,EAAIP,EAEjBnE,EAAIoB,KAAKC,IAAIG,KAA2B,GAApBxB,EAAIoB,KAAKC,IAAIG,KAAsB,GAATkD,EAE9C1E,EAAIiB,SAAW1J,EACbyI,EAAIoB,KAAKC,IAAIC,EAAIoD,EACf1E,EAAIoB,KAAKC,IAAIE,EAAI+C,EACjBtE,EAAIoB,KAAKC,IAAIvD,EAAIkC,EAAIoB,KAAKC,IAAIG,KAChC,EACA,GAKF,IAAImD,EACD3E,EAAIiB,UAAmB,KAAApC,EAAUyD,SAAjB,KAA4C,KAE3DsC,EAAa5E,EAAIa,QACrBb,EAAIa,QAAUlJ,KAAKC,IAAI,EAAGoI,EAAIa,QAAU8D,GAExC,IACIE,GAFJF,EAAeC,EAAa5E,EAAIa,SACA,IAAOhC,EAAU+D,EACtB,KACvBkC,EAAOjG,EAAUoD,iBAAmB4C,EAEpCE,EAAU,IAAInM,EAAKgE,UAAU,EAAGkI,EAAO,IAAM,GAC7CE,EAAS,IAAIpM,EAAKgE,UAAU,EAAG,EAAG,GACtCqH,EAAUgB,aAAaF,EAASC,GAChCpM,EAAKyF,QAAQ0G,GACbnM,EAAKyF,QAAQ2G,GAGXhF,EAAIkB,GAAK,KAAO,IAClBlB,EAAIc,aAAahB,KAAKE,EAAIa,SAC1Bb,EAAIe,OAAOjB,KAAKqE,GAChBnE,EAAIgB,QAAQlB,KAAKwE,IAGnBtE,EAAIkB,IAAM,GAGZ,GAAkB,SAAdlB,EAAImB,MACN,IAAK,IAAI+D,EAAO,EAAGA,EAAO1M,EAAW0M,IACnCnB,SAGF,KAAO/D,EAAIyB,QAAU,EAAIzB,EAAI0B,YAAc1B,EAAIyB,QAAU,EAAI,IAC3DsC,IACA/D,EAAIyB,QAAUoC,YAAYC,MAAQF,EAIxC5D,EAAIyB,QAAUoC,YAAYC,MAAQF,EAElC,IAAK,IAAI9F,EAAI,EAAGA,EAAID,EAAYE,OAAQD,IAAK,CAC3C,IAAIE,EAAWH,EAAYC,GAEvBoD,EADUlD,EAASE,SAASC,YACfI,iBACjB,GAAI2C,EAAI,CACNA,EAAGgD,kBAAkBjL,GACrB,IAAIqI,EAAIrI,EAASmL,YACbI,EAAIvL,EAASkM,cACjBnH,EAAShE,SAASC,IAAIqH,EAAE9J,IAAK8J,EAAE6C,IAAK7C,EAAE+C,KACtCrG,EAASoH,WAAWnL,IAAIuK,EAAEhN,IAAKgN,EAAEL,IAAKK,EAAEH,IAAKG,EAAE7B,OAkI/C0C,CAAc,CAAEtJ,aAXhB,EAQEA,aAG4B8B,cAAamC,MAAKnB,aAAa8E,GAC7DZ,EAAW/J,EAAUgH,IACrB1G,EAASgM,OAAOjM,EAAOD,OAIzB,sBACEmM,MAAO,CACLC,QAAS,OACTC,cAAe,MAEf5L,WAAY,kBACZ6L,SAAU,UANd,UASE,sBAAKH,MAAO,CAAEvL,SAAU,WAAY0L,SAAU,UAA9C,UACE,sBACEH,MAAO,CACLvL,SAAU,WACVoB,IAAK,OACLF,KAAM,OACNsK,QAAS,OACTC,cAAe,UANnB,UASE,oCAAO3C,EAAQ5B,GAAGyE,QAAQ,GAAK,QAC/B,oCAAO7C,EAAQrB,QAAQkE,QAAQ,GAAK,QACpC,oCAAO7C,EAAQpB,WAAWiE,QAAQ,GAAK,QAEvC,cAACC,EAAD,CACEC,KAAM,UACNC,KAAM,oCAAMlE,EAASrJ,eAAf,iBAAM,EAAkByH,WAAxB,aAAM,EAAuBc,gBAErC,cAAC8E,EAAD,CAAOC,KAAM,IAAKC,KAAM,oCAAMlE,EAASrJ,eAAf,iBAAM,EAAkByH,WAAxB,aAAM,EAAuBe,UACrD,cAAC6E,EAAD,CACEC,KAAM,KACNC,KAAM,oCAAMlE,EAASrJ,eAAf,iBAAM,EAAkByH,WAAxB,aAAM,EAAuBgB,cAIvC,qBACEuE,MAAO,CACLvL,SAAU,WACVqB,OAAQ,OACRH,KAAM,MACNsB,UAAW,sBALf,SAQE,0BACE0C,KAAK,QACLrH,IAAI,IACJD,IAAI,IACJmO,MAAM,IACNb,KAAK,QALP,sBAMSpC,EAAQ7B,UANjB,0BAOY,SAACzC,GAAD,OACPoD,EAASrJ,QAAQyH,IAAIiB,SAAW+E,WAAWxH,EAAEyH,OAAOF,UARzD,MAYF,wBAAQG,IAAKrE,EAAW0D,MAAO,CAAEY,KAAM,iBAGzC,sBAAKZ,MAAO,CAAEvK,MAAO,QAASoL,UAAW,OAAQnL,OAAQ,QAAzD,UACE,cAACoL,EAAD,CACER,KAAM,wBACNS,KAAM,KACNP,MAAOlH,EAAUQ,oBACjBkH,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBnH,oBAAqBoD,UAK5C,cAAC4D,EAAD,CACER,KAAM,WACNS,KAAM,QACNP,MAAOlH,EAAUkD,QACjBwE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBzE,QAASU,UAKhC,cAAC4D,EAAD,CACER,KAAM,oBACNS,KAAM,IACNP,MAAOlH,EAAUmD,UACjBuE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBxE,UAAWS,UAIlC,cAAC4D,EAAD,CACER,KAAM,aACNS,KAAM,MACNP,MAAOlH,EAAUoD,iBACjBsE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBvE,iBAAkBQ,UAKzC,cAAC4D,EAAD,CACER,KAAM,kBACNS,KAAM,IACNP,MAAOlH,EAAUqD,QACjBqE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBtE,QAASO,UAIhC,cAAC4D,EAAD,CACER,KAAM,eACNS,KAAM,IACNP,MAAOlH,EAAUsD,YACjBoE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBrE,YAAaM,UAIpC,cAAC4D,EAAD,CACER,KAAM,mBACNS,KAAM,MACNP,MAAOlH,EAAU0D,gBACjBgE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBjE,gBAAiBE,UAIxC,cAAC4D,EAAD,CACER,KAAM,YACNS,KAAM,GACNP,MAAOlH,EAAUuD,SACjBmE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBpE,SAAUK,UAKjC,cAAC4D,EAAD,CACER,KAAM,YACNS,KAAM,GACNP,MAAOlH,EAAUwD,SACjBkE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBnE,SAAUI,UAIjC,cAAC4D,EAAD,CACER,KAAM,YACNS,KAAM,MACNP,MAAOlH,EAAUyD,SACjBiE,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBlE,SAAUG,UAIjC,cAAC4D,EAAD,CACER,KAAM,aACNS,KAAM,IACNP,MAAOlH,EAAU2D,UACjB+D,SAAU,SAAC9D,GAAD,OACRS,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,IAAiBhE,UAAWC,UAIlC,cAACgE,EAAD,CACEZ,KAAM,aACNS,KAAM,IACNP,MAAOlH,EAAUE,YAEnB,cAAC0H,EAAD,CAASZ,KAAM,UAAWS,KAAM,IAAKP,MAAOlH,EAAU4D,IACtD,cAACgE,EAAD,CACEZ,KAAM,cACNS,KAAM,KACNP,MAAOlH,EAAU6D,KAEnB,cAAC+D,EAAD,CAASZ,KAAM,YAAaS,KAAM,IAAKP,MAAOlH,EAAU8D,UAMhE,SAAS0D,EAAT,GAAoD,IAAhCR,EAA+B,EAA/BA,KAAMS,EAAyB,EAAzBA,KAAMP,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,SACrC,OACE,sBACEhB,MAAO,CACLjL,MAAO,QACPkL,QAAS,OACTC,cAAe,MACfiB,eAAgB,gBAChBC,QAAS,QANb,UASE,qBAAKpB,MAAO,CAAEqB,UAAW,QAAzB,SAAoCf,IACpC,sBACEN,MAAO,CACLjL,MAAO,QACPkL,QAAS,OACTC,cAAe,MACfiB,eAAgB,aAChBG,WAAY,SACZ7L,MAAO,QACPmL,KAAM,QARV,UAWE,uBACEZ,MAAO,CAAEvK,MAAO,QAChB+K,MAAOA,EACP7G,KAAK,SACL4H,SAAU,SAACtI,GACT,IAAIuI,EAAKf,WAAWxH,EAAEyH,OAAOF,OAC7BQ,EAASQ,MAEH,IACV,sBAAMxB,MAAO,CAAEyB,WAAY,OAA3B,SAAqCV,UAM7C,SAASG,EAAT,GAAyC,IAAtBZ,EAAqB,EAArBA,KAAMS,EAAe,EAAfA,KAAMP,EAAS,EAATA,MAC7B,OACE,sBACER,MAAO,CACLjL,MAAO,QACPkL,QAAS,OACTC,cAAe,MACfiB,eAAgB,gBAChBC,QAAS,QANb,UASE,qBAAKpB,MAAO,CAAEqB,UAAW,QAAzB,SAAoCf,IACpC,sBACEN,MAAO,CACLjL,MAAO,QACPkL,QAAS,OACTC,cAAe,MACfiB,eAAgB,aAChBG,WAAY,SACZ7L,MAAO,QACPmL,KAAM,QARV,UAWE,uBAAOc,UAAQ,EAAC1B,MAAO,CAAEvK,MAAO,QAAU+K,MAAOA,IAAgB,IACjE,sBAAMR,MAAO,CAAEyB,WAAY,OAA3B,SAAqCV,UAa7C,SAASV,EAAT,GAAgC,IAAfE,EAAc,EAAdA,KAAMD,EAAQ,EAARA,KACjBK,EAAMhO,mBAEN0J,EAAW1J,iBATR,CACLL,IAAK,KACLD,KAAM,KACNsP,kBAAmB,IAOrB,EAA4BpF,mBAAS,GAArC,mBAAKvJ,EAAL,KAAc4O,EAAd,KACIxE,EAAI,IACJyE,EAAI,IAwCR,OAvCAtP,GAAkB,SAAC6L,GAEjB,IAAI0D,EAAMvB,IACV,GAAKI,EAAI3N,SAAY8O,GAAQzF,EAASrJ,QAAtC,CAEIqJ,EAASrJ,QAAQ2O,iBAAmBG,EAAItJ,OAAS,IACnD6D,EAASrJ,QAnBN,CACLV,IAAK,KACLD,KAAM,KACNsP,kBAAmB,IAkBnB,IAAItJ,EAAQgE,EAASrJ,QACrB2N,EAAI3N,QAAQyC,MAAQ2H,EACpBuD,EAAI3N,QAAQ0C,OAASmM,EACrB,IAAIE,EAAMpB,EAAI3N,QAAQgP,WAAW,MACjCD,EAAItM,MAAQ2H,EACZ2E,EAAIrM,OAASmM,EACbE,EAAIE,UAAY,kBAChBF,EAAIG,SAAS,EAAG,EAAG9E,EAAGyE,GAElBC,EAAItJ,OAAS,GAAGoJ,EAAWE,EAAIA,EAAItJ,OAAS,IAEhD,IAAK,IAAID,EAAIF,EAAMsJ,iBAAmB,EAAGpJ,EAAIuJ,EAAItJ,OAAQD,IACvDF,EAAM/F,IAAMF,KAAKE,IAAI+F,EAAM/F,IAAKwP,EAAIvJ,IACpCF,EAAMhG,IAAMD,KAAKC,IAAIgG,EAAMhG,IAAKyP,EAAIvJ,IAEtCF,EAAMsJ,iBAAmBG,EAAItJ,OAAS,EACtC,IAAI2J,EAAQ9J,EAAMhG,IAAMgG,EAAM/F,IAC1BD,EAAMgG,EAAMhG,IAAM8P,EAAQ,GAC1B7P,EAAM+F,EAAM/F,IAAM6P,EAAQ,GAE1BC,EAAM,SAAClF,GAAD,OAAO2E,EAAKA,GAAK3E,EAAI5K,IAASD,EAAMC,IAC1C+P,EAAM,SAACnF,GAAD,OAAQA,EAAIE,GAAM0E,EAAItJ,OAAS,IACzCuJ,EAAIO,YACJP,EAAIQ,OAAOF,EAAI,GAAID,EAAIN,EAAI,IAAM,IACjCA,EAAIU,SAAQ,SAACtF,EAAG3E,GACdwJ,EAAIU,OAAOJ,EAAI9J,GAAI6J,EAAIlF,OAEzB6E,EAAIW,YAAc,OAClBX,EAAIY,aAIJ,sBACE3C,MAAO,CACL4C,OAAQ,kBACRtO,WAAY,kBACZS,MAAO,SAJX,UAOE,gCACGuL,EADH,KACWtN,EAAQoN,QAAQ,MAE3B,wBAAQO,IAAKA,EAAKX,MAAO,CAAEvK,MAAO2H,EAAI,KAAM1H,OAAQmM,EAAI,WCvzB/CgB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC1G,EAAD,OCKS2G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASzD,OACP,cAAC,IAAM0D,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20744e1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nexport let clamp = (x, a, b) => Math.max(a, Math.min(b, x));\nexport let flatstep = (a, b, x) => clamp((x - a) / (b - a), 0, 1);\nexport let ease = (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t);\nexport let smoothstep = (a, b, x) => ease(flatstep(a, b, x));\nexport let mix = (a, b, m) => a * (1.0 - m) + b * m;\nexport const useAnimationFrame = (callback) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const requestRef = React.useRef();\n  const previousTimeRef = React.useRef();\n\n  const animate = (time) => {\n    if (previousTimeRef.current != undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  React.useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, []); // Make sure the effect runs only once\n};\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React, { useState } from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { clamp, useAnimationFrame } from \"./utils\";\n\nlet Ammo = window.Ammo;\n\nconst THREE = require(\"three\");\nconst qs = require(\"query-string\");\nvar cloneDeep = require(\"lodash.clonedeep\");\n\nvar _ = require(\"lodash\");\n\nlet tmpTrans = null;\n\n// const DISTANCE_UNIT = [\"mm\", \"m\", \"cm\", \"inch\", \"foot\"];\n\n// function distanceToMeter(v, u) {\n//   if (u == \"mm\") return v / 1000;\n//   if (u == \"m\") return v;\n//   if (u == \"cm\") return v / 100;\n//   if (u == \"inch\") return 2.54 / 100;\n//   if (u == \"foot\") return v * 0.3048;\n//   return v;\n// }\n\nfunction init(canvas) {\n  let camera, scene, renderer;\n\n  scene = new THREE.Scene();\n\n  renderer = new THREE.WebGLRenderer({ canvas: canvas, antialias: true });\n  renderer.setSize(window.innerWidth - 300, window.innerHeight);\n\n  ///\n  //create the scene\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xbfd1e5);\n\n  //create camera\n  camera = new THREE.PerspectiveCamera(\n    70,\n    (window.innerWidth - 300) / window.innerHeight,\n    0.2,\n    5000\n  );\n  camera.position.set(0, 1.7, 4);\n  camera.lookAt(new THREE.Vector3(0, 1.7, 0));\n\n  //Add hemisphere light\n  let hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.1);\n  hemiLight.color.setHSL(0.6, 0.6, 0.6);\n  hemiLight.groundColor.setHSL(0.1, 1, 0.4);\n  hemiLight.position.set(0, 50, 0);\n  scene.add(hemiLight);\n\n  //Add directional light\n  let dirLight = new THREE.DirectionalLight(0xffffff, 1);\n  dirLight.color.setHSL(0.1, 1, 0.95);\n  dirLight.position.set(-1, 1.75, 1);\n  dirLight.position.multiplyScalar(100);\n  scene.add(dirLight);\n\n  dirLight.castShadow = true;\n\n  dirLight.shadow.mapSize.width = 2048;\n  dirLight.shadow.mapSize.height = 2048;\n\n  let d = 10;\n\n  dirLight.shadow.camera.left = -d;\n  dirLight.shadow.camera.right = d;\n  dirLight.shadow.camera.top = d;\n  dirLight.shadow.camera.bottom = -d;\n\n  dirLight.shadow.camera.far = 13500;\n\n  renderer.setClearColor(0xbfd1e5);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth - 300, window.innerHeight);\n\n  renderer.gammaInput = true;\n  renderer.gammaOutput = true;\n\n  renderer.shadowMap.enabled = true;\n\n  return { camera, scene, renderer };\n}\n\nfunction createBlock({ physicsWorld, scene }) {\n  let pos = { x: 0, y: -1, z: 0 };\n  let scale = { x: 20, y: 2, z: 20 };\n  let quat = { x: 0, y: 0, z: 0, w: 1 };\n  let mass = 0;\n\n  //threeJS Section\n  let blockPlane = new THREE.Mesh(\n    new THREE.BoxBufferGeometry(),\n    new THREE.MeshPhongMaterial({ color: 0xa0afa4 })\n  );\n\n  blockPlane.position.set(pos.x, pos.y, pos.z);\n  blockPlane.scale.set(scale.x, scale.y, scale.z);\n\n  blockPlane.castShadow = true;\n  blockPlane.receiveShadow = true;\n\n  scene.add(blockPlane);\n\n  //Ammojs Section\n  let transform = new Ammo.btTransform();\n  transform.setIdentity();\n  transform.setOrigin(new Ammo.btVector3(pos.x, pos.y, pos.z));\n  transform.setRotation(new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));\n  let motionState = new Ammo.btDefaultMotionState(transform);\n\n  let colShape = new Ammo.btBoxShape(\n    new Ammo.btVector3(scale.x * 0.5, scale.y * 0.5, scale.z * 0.5)\n  );\n  colShape.setMargin(0.05);\n\n  let localInertia = new Ammo.btVector3(0, 0, 0);\n  colShape.calculateLocalInertia(mass, localInertia);\n\n  let rbInfo = new Ammo.btRigidBodyConstructionInfo(\n    mass,\n    motionState,\n    colShape,\n    localInertia\n  );\n  let body = new Ammo.btRigidBody(rbInfo);\n\n  physicsWorld.addRigidBody(body);\n}\n\nfunction resetRigidBodies({ physicsWorld, scene, rigidBodies }) {\n  for (let i = 0; i < rigidBodies.length; i++) {\n    let objThree = rigidBodies[i];\n    let objAmmo = objThree.userData.physicsBody;\n\n    physicsWorld.removeRigidBody(objAmmo);\n    try {\n      Ammo.destroy(objAmmo.getCollisionShape());\n      Ammo.destroy(objAmmo.getMotionState());\n      Ammo.destroy(objAmmo);\n    } catch (e) {\n      console.error(e);\n    }\n\n    scene.remove(objThree);\n  }\n  rigidBodies.length = 0;\n}\n\nfunction createDrone({ physicsWorld, scene, rigidBodies, droneData }) {\n  let pos = { x: 0, y: 5, z: 0 };\n\n  let quat = { x: 0, y: 0, z: 0, w: 1 };\n  let mass = droneData.totalMass / 1000;\n\n  let ball = new THREE.Group();\n  if (droneData.type === \"quadrotor +\") {\n    let radius = 2 / 100;\n    let mcd_meters = droneData.motorCenterDistance / 1000;\n    let ball1 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball1.position.set(mcd_meters, 0, 0);\n    ball1.castShadow = true;\n    ball.add(ball1);\n\n    let ball2 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball2.position.set(-mcd_meters, 0, 0);\n    ball2.castShadow = true;\n    ball.add(ball2);\n\n    let ball3 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball3.position.set(0, 0, -mcd_meters);\n    ball3.castShadow = true;\n    ball.add(ball3);\n\n    let ball4 = new THREE.Mesh(\n      new THREE.SphereBufferGeometry(radius),\n      new THREE.MeshPhongMaterial({ color: 0xff0505 })\n    );\n    ball4.position.set(0, 0, mcd_meters);\n    ball4.castShadow = true;\n    ball.add(ball4);\n\n    let rod1 = new THREE.Mesh(\n      new THREE.BoxBufferGeometry(radius / 2, radius / 2, mcd_meters * 2),\n      new THREE.MeshPhongMaterial({ color: 0x000000 })\n    );\n    rod1.position.set(0, 0, 0);\n    rod1.castShadow = true;\n    ball.add(rod1);\n\n    let rod2 = new THREE.Mesh(\n      new THREE.BoxBufferGeometry(mcd_meters * 2, radius / 2, radius / 2),\n      new THREE.MeshPhongMaterial({ color: 0x000000 })\n    );\n    rod2.position.set(0, 0, 0);\n    rod2.castShadow = true;\n    ball.add(rod2);\n  }\n\n  ball.position.set(pos.x, pos.y, pos.z);\n\n  ball.castShadow = true;\n  ball.receiveShadow = true;\n\n  scene.add(ball);\n\n  //Ammojs Section\n  let transform = new Ammo.btTransform();\n  transform.setIdentity();\n  transform.setOrigin(new Ammo.btVector3(pos.x, pos.y, pos.z));\n  transform.setRotation(new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));\n  let motionState = new Ammo.btDefaultMotionState(transform);\n\n  let colShape = new Ammo.btBoxShape(\n    new Ammo.btVector3(\n      droneData.motorCenterDistance / 1000,\n      2 / 100,\n      droneData.motorCenterDistance / 1000\n    )\n  );\n  colShape.setMargin(0.05);\n\n  let localInertia = new Ammo.btVector3(0, 0, 0);\n  colShape.calculateLocalInertia(mass, localInertia);\n\n  let rbInfo = new Ammo.btRigidBodyConstructionInfo(\n    mass,\n    motionState,\n    colShape,\n    localInertia\n  );\n  let body = new Ammo.btRigidBody(rbInfo);\n\n  body.setActivationState(4);\n\n  ball.userData.physicsBody = body;\n  physicsWorld.addRigidBody(body);\n\n  rigidBodies.push(ball);\n}\n\nfunction reset(state) {\n  resetRigidBodies(state);\n  createDrone(state);\n  state.sim = INITIAL_SIM_DATA();\n}\n\nfunction setupPhysicsWorld() {\n  let collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\n    dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n    overlappingPairCache = new Ammo.btDbvtBroadphase(),\n    solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n  let physicsWorld = new Ammo.btDiscreteDynamicsWorld(\n    dispatcher,\n    overlappingPairCache,\n    solver,\n    collisionConfiguration\n  );\n  physicsWorld.setGravity(new Ammo.btVector3(0, -9.8, 0));\n\n  tmpTrans = new Ammo.btTransform();\n  return physicsWorld;\n}\n\nfunction updatePhysics(\n  { physicsWorld, rigidBodies, sim, droneData },\n  deltaTime\n) {\n  // Step world\n\n  let startTime = performance.now();\n  sim.deltaToSim = deltaTime;\n  sim.simTime = 0;\n  if (droneData) {\n    function simulateOneStep() {\n      physicsWorld.stepSimulation(1 / 1000.0, 0);\n\n      let drone = rigidBodies[0];\n      let droneAmmo = drone.userData.physicsBody;\n      droneAmmo.getMotionState().getWorldTransform(tmpTrans);\n      let [x, y, z] = [\n        tmpTrans.getOrigin().x(),\n        tmpTrans.getOrigin().y(),\n        tmpTrans.getOrigin().z(),\n      ];\n      let [vx, vy, vz] = [\n        droneAmmo.getLinearVelocity().x(),\n        droneAmmo.getLinearVelocity().y(),\n        droneAmmo.getLinearVelocity().z(),\n      ];\n\n      if (sim.stage === \"training.pid.alt\") {\n        {\n          //RESET ORIENTATION\n          droneAmmo.getMotionState().getWorldTransform(tmpTrans);\n          let quat = { x: 0, y: 0, z: 0, w: 1 };\n          let q = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w);\n          tmpTrans.setRotation(q);\n          Ammo.destroy(q);\n          droneAmmo.getMotionState().setWorldTransform(tmpTrans);\n        }\n\n        let altErr = 3 - y;\n\n        sim.pids.alt.accI = sim.pids.alt.accI * 0.9 + altErr * 0.1;\n\n        sim.throttle = clamp(\n          sim.pids.alt.p * altErr -\n            sim.pids.alt.d * vy +\n            sim.pids.alt.i * sim.pids.alt.accI,\n          0,\n          1\n        );\n      }\n\n      {\n        let batteryDrain =\n          (sim.throttle * (100 * (droneData.batteryC * (1 / 1000)))) / 3600;\n\n        let oldBattery = sim.battery;\n        sim.battery = Math.max(0, sim.battery - batteryDrain);\n        batteryDrain = oldBattery - sim.battery;\n        let jouleCons = (batteryDrain / 100) * droneData.j;\n        let wattCons = jouleCons / 0.001;\n        let lift = droneData.motorLiftPerWatt * wattCons;\n\n        let liftVec = new Ammo.btVector3(0, lift / 1000, 0);\n        let relPos = new Ammo.btVector3(0, 0, 0);\n        droneAmmo.applyImpulse(liftVec, relPos);\n        Ammo.destroy(liftVec);\n        Ammo.destroy(relPos);\n      }\n\n      if (sim.ms % 30 === 0) {\n        sim.batteryChart.push(sim.battery);\n        sim.yChart.push(y);\n        sim.vyChart.push(vy);\n      }\n\n      sim.ms += 1;\n    }\n\n    if (sim.stage === \"free\") {\n      for (let step = 0; step < deltaTime; step++) {\n        simulateOneStep();\n      }\n    } else {\n      while (sim.simTime + 1 < sim.deltaToSim && sim.simTime + 1 < 33) {\n        simulateOneStep();\n        sim.simTime = performance.now() - startTime;\n      }\n    }\n  }\n  sim.simTime = performance.now() - startTime;\n  // Update rigid bodies\n  for (let i = 0; i < rigidBodies.length; i++) {\n    let objThree = rigidBodies[i];\n    let objAmmo = objThree.userData.physicsBody;\n    let ms = objAmmo.getMotionState();\n    if (ms) {\n      ms.getWorldTransform(tmpTrans);\n      let p = tmpTrans.getOrigin();\n      let q = tmpTrans.getRotation();\n      objThree.position.set(p.x(), p.y(), p.z());\n      objThree.quaternion.set(q.x(), q.y(), q.z(), q.w());\n    }\n  }\n}\n\nconst INITIAL_DRONE_DATA = () => {\n  return {\n    type: \"quadrotor +\",\n    motorCenterDistance: 100, //mm\n    motorKV: 10000, // RPM/V\n    motorMass: 20, //g\n    motorLiftPerWatt: 0.05, //N/W\n    escMass: 20, //g\n    batteryMass: 100, //g\n    batteryS: 2,\n    batteryP: 1,\n    batteryC: 45, // h-1\n    batteryCapacity: 850, // mAh\n    frameMass: 100, //g\n    totalMass: 0,\n    v: 0,\n    mA: 0,\n    w: 0,\n    j: 0,\n  };\n};\nconst INITIAL_SIM_DATA = () => {\n  return {\n    battery: 100,\n    batteryChart: [],\n    yChart: [],\n    vyChart: [],\n    throttle: 0,\n    ms: 0,\n    stage: \"free\",\n    pids: {\n      alt: {\n        p: 1,\n        i: 20,\n        d: 1.9,\n\n        accI: [],\n      },\n    },\n    simTime: 0,\n    deltaToSim: 0,\n  };\n};\n\nfunction computeTotalMass(drone) {\n  return {\n    totalMass:\n      drone.escMass * 4 +\n      drone.motorMass * 4 +\n      drone.batteryMass +\n      drone.frameMass,\n  };\n}\n\nfunction computeMaxElec(drone) {\n  let v = drone.batteryS * 3.7;\n  let mA = drone.batteryC * drone.batteryCapacity; //mA\n  let w = (v * mA) / 1000;\n  let j = ((drone.batteryCapacity * 3600) / 1000) * v;\n  return { v, mA, w, j };\n}\n\nexport default function EditorFrag() {\n  let stateRef = useRef(null);\n  let canvasRef = useRef();\n  let [droneData, setDroneData_] = useState(INITIAL_DRONE_DATA());\n  let [simData, setSimData] = useState(INITIAL_SIM_DATA());\n  let [droneComputed, setDroneComputed] = useState(false);\n  function setDroneData(arg) {\n    setDroneData_(arg);\n    setDroneComputed(false);\n  }\n\n  useEffect(() => {\n    if (droneComputed) {\n      if (stateRef.current?.alive) {\n        stateRef.current.droneData = droneData;\n        reset(stateRef.current);\n      }\n    } else {\n      let newDrone = {\n        ...cloneDeep(droneData),\n        ...computeMaxElec(droneData),\n        ...computeTotalMass(droneData),\n      };\n      if (stateRef.current?.alive) stateRef.current.droneData = newDrone;\n      setDroneData_(newDrone);\n      setDroneComputed(true);\n    }\n  }, [droneData, droneComputed]);\n  useEffect(() => {\n    async function test() {\n      console.log(\"Trying to load Ammo.js\");\n      try {\n        Ammo = await Ammo();\n\n        stateRef.current = init(canvasRef.current);\n        stateRef.current.physicsWorld = setupPhysicsWorld();\n\n        stateRef.current.rigidBodies = [];\n        createBlock(stateRef.current);\n        stateRef.current.alive = true;\n        setDroneComputed(false);\n        stateRef.current.sim = INITIAL_SIM_DATA();\n      } catch (e) {\n        console.error(\"ammo: \", e);\n        setTimeout(() => test(), 500);\n      }\n    }\n    if (Ammo?.btDefaultCollisionConfiguration == undefined) test();\n  }, []);\n\n  useAnimationFrame((dt) => {\n    if (stateRef.current != null) {\n      let {\n        camera,\n        scene,\n        renderer,\n\n        sim,\n        droneData,\n        rigidBodies,\n        physicsWorld,\n      } = stateRef.current;\n\n      updatePhysics({ physicsWorld, rigidBodies, sim, droneData }, dt);\n      setSimData(cloneDeep(sim));\n      renderer.render(scene, camera);\n    }\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n\n        background: \"rgb(62, 62, 62)\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div style={{ position: \"relative\", overflow: \"hidden\" }}>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div> {simData.ms.toFixed(2) + \"ms\"}</div>\n          <div> {simData.simTime.toFixed(2) + \"ms\"}</div>\n          <div> {simData.deltaToSim.toFixed(2) + \"ms\"}</div>\n\n          <Chart\n            name={\"battery\"}\n            arrf={() => stateRef.current?.sim?.batteryChart}\n          ></Chart>\n          <Chart name={\"y\"} arrf={() => stateRef.current?.sim?.yChart}></Chart>\n          <Chart\n            name={\"vy\"}\n            arrf={() => stateRef.current?.sim?.vyChart}\n          ></Chart>\n        </div>\n\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n            left: \"50%\",\n            transform: \"translate(-50%,0%)\",\n          }}\n        >\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            value=\"0\"\n            step=\"0.01\"\n            value={simData.throttle}\n            onChange={(e) =>\n              (stateRef.current.sim.throttle = parseFloat(e.target.value))\n            }\n          ></input>\n        </div>\n        <canvas ref={canvasRef} style={{ flex: \"1 1 auto\" }}></canvas>\n      </div>\n\n      <div style={{ width: \"300px\", overflowY: \"auto\", height: \"100%\" }}>\n        <NumberIn\n          name={\"motor center distance\"}\n          unit={\"mm\"}\n          value={droneData.motorCenterDistance}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorCenterDistance: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"motor kv\"}\n          unit={\"RPM/V\"}\n          value={droneData.motorKV}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorKV: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"single motor mass\"}\n          unit={\"g\"}\n          value={droneData.motorMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"motor lift\"}\n          unit={\"N/W\"}\n          value={droneData.motorLiftPerWatt}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, motorLiftPerWatt: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"single esc mass\"}\n          unit={\"g\"}\n          value={droneData.escMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, escMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery mass\"}\n          unit={\"g\"}\n          value={droneData.batteryMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryMass: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery capacity\"}\n          unit={\"mAh\"}\n          value={droneData.batteryCapacity}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryCapacity: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery S\"}\n          unit={\"\"}\n          value={droneData.batteryS}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryS: v };\n            })\n          }\n        ></NumberIn>\n\n        <NumberIn\n          name={\"battery P\"}\n          unit={\"\"}\n          value={droneData.batteryP}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryP: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"battery C\"}\n          unit={\"h-1\"}\n          value={droneData.batteryC}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, batteryC: v };\n            })\n          }\n        ></NumberIn>\n        <NumberIn\n          name={\"frame mass\"}\n          unit={\"g\"}\n          value={droneData.frameMass}\n          setValue={(v) =>\n            setDroneData((old) => {\n              return { ...old, frameMass: v };\n            })\n          }\n        ></NumberIn>\n        <TextOut\n          name={\"total mass\"}\n          unit={\"g\"}\n          value={droneData.totalMass}\n        ></TextOut>\n        <TextOut name={\"total V\"} unit={\"V\"} value={droneData.v}></TextOut>\n        <TextOut\n          name={\"max current\"}\n          unit={\"mA\"}\n          value={droneData.mA}\n        ></TextOut>\n        <TextOut name={\"max power\"} unit={\"W\"} value={droneData.w}></TextOut>\n      </div>\n    </div>\n  );\n}\n\nfunction NumberIn({ name, unit, value, setValue }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ textAlign: \"left\" }}>{name}</div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          width: \"120px\",\n          flex: \"none\",\n        }}\n      >\n        <input\n          style={{ width: \"60px\" }}\n          value={value}\n          type=\"number\"\n          onChange={(e) => {\n            let fl = parseFloat(e.target.value);\n            setValue(fl);\n          }}\n        ></input>{\" \"}\n        <span style={{ marginLeft: \"5px\" }}>{unit}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction TextOut({ name, unit, value }) {\n  return (\n    <div\n      style={{\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        padding: \"10px\",\n      }}\n    >\n      <div style={{ textAlign: \"left\" }}>{name}</div>\n      <div\n        style={{\n          color: \"white\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          width: \"120px\",\n          flex: \"none\",\n        }}\n      >\n        <input disabled style={{ width: \"60px\" }} value={value}></input>{\" \"}\n        <span style={{ marginLeft: \"5px\" }}>{unit}</span>\n      </div>\n    </div>\n  );\n}\n\nconst INIT_CHART = () => {\n  return {\n    min: 9999,\n    max: -9999,\n    lastComputeIndex: -1,\n  };\n};\nfunction Chart({ arrf, name }) {\n  let ref = useRef();\n\n  let stateRef = useRef(INIT_CHART());\n  let [current, setCurrent] = useState(0);\n  let w = 200;\n  let h = 200;\n  useAnimationFrame((dt) => {\n    //\n    let arr = arrf();\n    if (!ref.current || !arr || !stateRef.current) return;\n\n    if (stateRef.current.lastComputeIndex > arr.length - 1)\n      stateRef.current = INIT_CHART();\n\n    let state = stateRef.current;\n    ref.current.width = w;\n    ref.current.height = h;\n    let ctx = ref.current.getContext(\"2d\");\n    ctx.width = w;\n    ctx.height = h;\n    ctx.fillStyle = \"rgba(0,0,0,0.2)\";\n    ctx.fillRect(0, 0, w, h);\n\n    if (arr.length > 0) setCurrent(arr[arr.length - 1]);\n\n    for (let i = state.lastComputeIndex + 1; i < arr.length; i++) {\n      state.min = Math.min(state.min, arr[i]);\n      state.max = Math.max(state.max, arr[i]);\n    }\n    state.lastComputeIndex = arr.length - 1;\n    let split = state.max - state.min;\n    let max = state.max + split / 10;\n    let min = state.min - split / 10;\n\n    let toY = (v) => h - (h * (v - min)) / (max - min);\n    let toX = (v) => (v * w) / (arr.length - 1);\n    ctx.beginPath();\n    ctx.moveTo(toX(0), toY(arr[0] || 0));\n    arr.forEach((v, i) => {\n      ctx.lineTo(toX(i), toY(v));\n    });\n    ctx.strokeStyle = \"#fff\";\n    ctx.stroke();\n  });\n\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        background: \"rgba(0,0,0,0.6)\",\n        color: \"white\",\n      }}\n    >\n      <div>\n        {name}: {current.toFixed(2)}\n      </div>\n      <canvas ref={ref} style={{ width: w + \"px\", height: h + \"px\" }}></canvas>\n    </div>\n  );\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EditorFrag from \"./frag/Editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EditorFrag></EditorFrag>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}